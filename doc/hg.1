.\" Man page generated from reStructeredText.
.
.TH HG 1 "" "" "Mercurial Manual"
.SH NAME
hg \- Mercurial source code management system
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBhg\fP \fIcommand\fP [\fIoption\fP]... [\fIargument\fP]...
.SH DESCRIPTION
.sp
The \fBhg\fP command provides a command line interface to the Mercurial
system.
.SH COMMAND ELEMENTS
.INDENT 0.0
.TP
.B files...
.
indicates one or more filename or relative path filenames; see
\%File Name Patterns\: for information on pattern matching
.TP
.B path
.
indicates a path on the local machine
.TP
.B revision
.
indicates a changeset which can be specified as a changeset
revision number, a tag, or a unique substring of the changeset
hash value
.TP
.B repository path
.
either the pathname of a local repository or the URI of a remote
repository.
.UNINDENT
.SH OPTIONS
.INDENT 0.0
.TP
.B \-R,  \-\-repository
.
repository root directory or name of overlay bundle file
.TP
.B \-\-cwd
.
change working directory
.TP
.B \-y,  \-\-noninteractive
.
do not prompt, assume \(aqyes\(aq for any required answers
.TP
.B \-q,  \-\-quiet
.
suppress output
.TP
.B \-v,  \-\-verbose
.
enable additional output
.TP
.B \-\-config
.
set/override config option (use \(aqsection.name=value\(aq)
.TP
.B \-\-debug
.
enable debugging output
.TP
.B \-\-debugger
.
start debugger
.TP
.B \-\-encoding
.
set the charset encoding (default: ascii)
.TP
.B \-\-encodingmode
.
set the charset encoding mode (default: strict)
.TP
.B \-\-traceback
.
always print a traceback on exception
.TP
.B \-\-time
.
time how long the command takes
.TP
.B \-\-profile
.
print command execution profile
.TP
.B \-\-version
.
output version information and exit
.TP
.B \-h,  \-\-help
.
display help and exit
.UNINDENT
.SH COMMANDS
.INDENT 0.0
.TP
.B \fBadd [OPTION]... [FILE]...\fP
.sp
Schedule files to be version controlled and added to the
repository.
.sp
The files will be added to the repository at the next commit. To
undo an add before that, see \%\fBhg forget\fP\:.
.sp
If no names are given, add all files to the repository.
.sp
An example showing how new (unknown) files are added
automatically by \%\fBhg add\fP\::
.sp
.nf
.ft C
$ ls
foo.c
$ hg status
? foo.c
$ hg add
adding foo.c
$ hg status
A foo.c
.ft P
.fi
.sp
Returns 0 if all files are successfully added.
.sp
options:
.INDENT 7.0
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.TP
.B \-n,  \-\-dry\-run
.
do not perform actions, just print output
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBaddremove [OPTION]... [FILE]...\fP
.sp
Add all new files and remove all missing files from the
repository.
.sp
New files are ignored if they match any of the patterns in
.hgignore. As with add, these changes take effect at the next
commit.
.sp
Use the \-s/\-\-similarity option to detect renamed files. With a
parameter greater than 0, this compares every removed file with
every added file and records those similar enough as renames. This
option takes a percentage between 0 (disabled) and 100 (files must
be identical) as its parameter. Detecting renamed files this way
can be expensive. After using this option, \%\fBhg status \-C\fP\: can be
used to check which files were identified as moved or renamed.
.sp
Returns 0 if all files are successfully added.
.sp
options:
.INDENT 7.0
.TP
.B \-s,  \-\-similarity
.
guess renamed files by similarity (0<=s<=100)
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.TP
.B \-n,  \-\-dry\-run
.
do not perform actions, just print output
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBannotate [\-r REV] [\-f] [\-a] [\-u] [\-d] [\-n] [\-c] [\-l] FILE...\fP
.sp
List changes in files, showing the revision id responsible for
each line
.sp
This command is useful for discovering when a change was made and
by whom.
.sp
Without the \-a/\-\-text option, annotate will avoid processing files
it detects as binary. With \-a, annotate will annotate the file
anyway, although the results will probably be neither useful
nor desirable.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-rev
.
annotate the specified revision
.TP
.B \-\-follow
.
follow copies/renames and list the filename (DEPRECATED)
.TP
.B \-\-no\-follow
.
don\(aqt follow copies and renames
.TP
.B \-a,  \-\-text
.
treat all files as text
.TP
.B \-u,  \-\-user
.
list the author (long with \-v)
.TP
.B \-f,  \-\-file
.
list the filename
.TP
.B \-d,  \-\-date
.
list the date (short with \-q)
.TP
.B \-n,  \-\-number
.
list the revision number (default)
.TP
.B \-c,  \-\-changeset
.
list the changeset
.TP
.B \-l,  \-\-line\-number
.
show line number at the first appearance
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.sp
aliases: blame
.UNINDENT
.INDENT 0.0
.TP
.B \fBarchive [OPTION]... DEST\fP
.sp
By default, the revision used is the parent of the working
directory; use \-r/\-\-rev to specify a different revision.
.sp
The archive type is automatically detected based on file
extension (or override using \-t/\-\-type).
.sp
Valid types are:
.INDENT 7.0
.TP
.B \fBfiles\fP
.sp
a directory full of files (default)
.TP
.B \fBtar\fP
.sp
tar archive, uncompressed
.TP
.B \fBtbz2\fP
.sp
tar archive, compressed using bzip2
.TP
.B \fBtgz\fP
.sp
tar archive, compressed using gzip
.TP
.B \fBuzip\fP
.sp
zip archive, uncompressed
.TP
.B \fBzip\fP
.sp
zip archive, compressed using deflate
.UNINDENT
.sp
The exact name of the destination archive or directory is given
using a format string; see \%\fBhg help export\fP\: for details.
.sp
Each member added to an archive file has a directory prefix
prepended. Use \-p/\-\-prefix to specify a format string for the
prefix. The default is the basename of the archive, with suffixes
removed.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-\-no\-decode
.
do not pass files through decoders
.TP
.B \-p,  \-\-prefix
.
directory prefix for files in archive
.TP
.B \-r,  \-\-rev
.
revision to distribute
.TP
.B \-t,  \-\-type
.
type of distribution to create
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBbackout [OPTION]... [\-r] REV\fP
.sp
Commit the backed out changes as a new changeset. The new
changeset is a child of the backed out changeset.
.sp
If you backout a changeset other than the tip, a new head is
created. This head will be the new tip and you should merge this
backout changeset with another head.
.sp
The \-\-merge option remembers the parent of the working directory
before starting the backout, then merges the new head with that
changeset afterwards. This saves you from doing the merge by hand.
The result of this merge is not committed, as with a normal merge.
.sp
See \%\fBhg help dates\fP\: for a list of formats valid for \-d/\-\-date.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-\-merge
.
merge with old dirstate parent after backout
.TP
.B \-\-parent
.
parent to choose when backing out merge
.TP
.B \-r,  \-\-rev
.
revision to backout
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.TP
.B \-m,  \-\-message
.
use text as commit message
.TP
.B \-l,  \-\-logfile
.
read commit message from file
.TP
.B \-d,  \-\-date
.
record datecode as commit date
.TP
.B \-u,  \-\-user
.
record the specified user as committer
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBbisect [\-gbsr] [\-U] [\-c CMD] [REV]\fP
.sp
This command helps to find changesets which introduce problems. To
use, mark the earliest changeset you know exhibits the problem as
bad, then mark the latest changeset which is free from the problem
as good. Bisect will update your working directory to a revision
for testing (unless the \-U/\-\-noupdate option is specified). Once
you have performed tests, mark the working directory as good or
bad, and bisect will either update to another candidate changeset
or announce that it has found the bad revision.
.sp
As a shortcut, you can also use the revision argument to mark a
revision as good or bad without checking it out first.
.sp
If you supply a command, it will be used for automatic bisection.
Its exit status will be used to mark revisions as good or bad:
status 0 means good, 125 means to skip the revision, 127
(command not found) will abort the bisection, and any other
non\-zero exit status means the revision is bad.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-reset
.
reset bisect state
.TP
.B \-g,  \-\-good
.
mark changeset good
.TP
.B \-b,  \-\-bad
.
mark changeset bad
.TP
.B \-s,  \-\-skip
.
skip testing changeset
.TP
.B \-c,  \-\-command
.
use command to check changeset state
.TP
.B \-U,  \-\-noupdate
.
do not update to target
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBbranch [\-fC] [NAME]\fP
.sp
With no argument, show the current branch name. With one argument,
set the working directory branch name (the branch will not exist
in the repository until the next commit). Standard practice
recommends that primary development take place on the \(aqdefault\(aq
branch.
.sp
Unless \-f/\-\-force is specified, branch will not let you set a
branch name that already exists, even if it\(aqs inactive.
.sp
Use \-C/\-\-clean to reset the working directory branch to that of
the parent of the working directory, negating a previous branch
change.
.sp
Use the command \%\fBhg update\fP\: to switch to an existing branch. Use
\%\fBhg commit \-\-close\-branch\fP\: to mark this branch as closed.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-force
.
set branch name even if it shadows an existing branch
.TP
.B \-C,  \-\-clean
.
reset branch name to parent branch name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBbranches [\-ac]\fP
.sp
List the repository\(aqs named branches, indicating which ones are
inactive. If \-c/\-\-closed is specified, also list branches which have
been marked closed (see \%\fBhg commit \-\-close\-branch\fP\:).
.sp
If \-a/\-\-active is specified, only show active branches. A branch
is considered active if it contains repository heads.
.sp
Use the command \%\fBhg update\fP\: to switch to an existing branch.
.sp
Returns 0.
.sp
options:
.INDENT 7.0
.TP
.B \-a,  \-\-active
.
show only branches that have unmerged heads
.TP
.B \-c,  \-\-closed
.
show normal and closed branches
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBbundle [\-f] [\-t TYPE] [\-a] [\-r REV]... [\-\-base REV]... FILE [DEST]\fP
.sp
Generate a compressed changegroup file collecting changesets not
known to be in another repository.
.sp
If you omit the destination repository, then hg assumes the
destination will have all the nodes you specify with \-\-base
parameters. To create a bundle containing all changesets, use
\-a/\-\-all (or \-\-base null).
.sp
You can change compression method with the \-t/\-\-type option.
The available compression methods are: none, bzip2, and
gzip (by default, bundles are compressed using bzip2).
.sp
The bundle file can then be transferred using conventional means
and applied to another repository with the unbundle or pull
command. This is useful when direct push and pull are not
available or when exporting an entire repository is undesirable.
.sp
Applying bundles preserves all changeset contents including
permissions, copy/rename information, and revision history.
.sp
Returns 0 on success, 1 if no changes found.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-force
.
run even when the destination is unrelated
.TP
.B \-r,  \-\-rev
.
a changeset intended to be added to the destination
.TP
.B \-b,  \-\-branch
.
a specific branch you would like to bundle
.TP
.B \-\-base
.
a base changeset assumed to be available at the destination
.TP
.B \-a,  \-\-all
.
bundle all changesets in the repository
.TP
.B \-t,  \-\-type
.
bundle compression type to use (default: bzip2)
.TP
.B \-e,  \-\-ssh
.
specify ssh command to use
.TP
.B \-\-remotecmd
.
specify hg command to run on the remote side
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBcat [OPTION]... FILE...\fP
.sp
Print the specified files as they were at the given revision. If
no revision is given, the parent of the working directory is used,
or tip if no revision is checked out.
.sp
Output may be to a file, in which case the name of the file is
given using a format string. The formatting rules are the same as
for the export command, with the following additions:
.INDENT 7.0
.TP
.B \fB%s\fP
.sp
basename of file being printed
.TP
.B \fB%d\fP
.sp
dirname of file being printed, or \(aq.\(aq if in repository root
.TP
.B \fB%p\fP
.sp
root\-relative path name of file being printed
.UNINDENT
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-o,  \-\-output
.
print output to file with formatted name
.TP
.B \-r,  \-\-rev
.
print the given revision
.TP
.B \-\-decode
.
apply any matching decode filter
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBclone [OPTION]... SOURCE [DEST]\fP
.sp
Create a copy of an existing repository in a new directory.
.sp
If no destination directory name is specified, it defaults to the
basename of the source.
.sp
The location of the source is added to the new repository\(aqs
.hg/hgrc file, as the default to be used for future pulls.
.sp
See \%\fBhg help urls\fP\: for valid source format details.
.sp
It is possible to specify an \fBssh://\fP URL as the destination, but no
.hg/hgrc and working directory will be created on the remote side.
Please see \%\fBhg help urls\fP\: for important details about \fBssh://\fP URLs.
.sp
A set of changesets (tags, or branch names) to pull may be specified
by listing each changeset (tag, or branch name) with \-r/\-\-rev.
If \-r/\-\-rev is used, the cloned repository will contain only a subset
of the changesets of the source repository. Only the set of changesets
defined by all \-r/\-\-rev options (including all their ancestors)
will be pulled into the destination repository.
No subsequent changesets (including subsequent tags) will be present
in the destination.
.sp
Using \-r/\-\-rev (or \(aqclone src#rev dest\(aq) implies \-\-pull, even for
local source repositories.
.sp
For efficiency, hardlinks are used for cloning whenever the source
and destination are on the same filesystem (note this applies only
to the repository data, not to the working directory). Some
filesystems, such as AFS, implement hardlinking incorrectly, but
do not report errors. In these cases, use the \-\-pull option to
avoid hardlinking.
.sp
In some cases, you can clone repositories and the working directory
using full hardlinks with
.sp
.nf
.ft C
$ cp \-al REPO REPOCLONE
.ft P
.fi
.sp
This is the fastest way to clone, but it is not always safe. The
operation is not atomic (making sure REPO is not modified during
the operation is up to you) and you have to make sure your editor
breaks hardlinks (Emacs and most Linux Kernel tools do so). Also,
this is not compatible with certain extensions that place their
metadata under the .hg directory, such as mq.
.sp
Mercurial will update the working directory to the first applicable
revision from this list:
.INDENT 7.0
.IP a. 3
.
null if \-U or the source repository has no changesets
.IP b. 3
.
if \-u . and the source repository is local, the first parent of
the source repository\(aqs working directory
.IP c. 3
.
the changeset specified with \-u (if a branch name, this means the
latest head of that branch)
.IP d. 3
.
the changeset specified with \-r
.IP e. 3
.
the tipmost head specified with \-b
.IP f. 3
.
the tipmost head specified with the url#branch source syntax
.IP g. 3
.
the tipmost head of the default branch
.IP h. 3
.
tip
.UNINDENT
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-U,  \-\-noupdate
.
the clone will include an empty working copy (only a repository)
.TP
.B \-u,  \-\-updaterev
.
revision, tag or branch to check out
.TP
.B \-r,  \-\-rev
.
include the specified changeset
.TP
.B \-b,  \-\-branch
.
clone only the specified branch
.TP
.B \-\-pull
.
use pull protocol to copy metadata
.TP
.B \-\-uncompressed
.
use uncompressed transfer (fast over LAN)
.TP
.B \-e,  \-\-ssh
.
specify ssh command to use
.TP
.B \-\-remotecmd
.
specify hg command to run on the remote side
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBcommit [OPTION]... [FILE]...\fP
.sp
Commit changes to the given files into the repository. Unlike a
centralized RCS, this operation is a local operation. See
\%\fBhg push\fP\: for a way to actively distribute your changes.
.sp
If a list of files is omitted, all changes reported by \%\fBhg status\fP\:
will be committed.
.sp
If you are committing the result of a merge, do not provide any
filenames or \-I/\-X filters.
.sp
If no commit message is specified, the configured editor is
started to prompt you for a message.
.sp
See \%\fBhg help dates\fP\: for a list of formats valid for \-d/\-\-date.
.sp
Returns 0 on success, 1 if nothing changed.
.sp
options:
.INDENT 7.0
.TP
.B \-A,  \-\-addremove
.
mark new/missing files as added/removed before committing
.TP
.B \-\-close\-branch
.
mark a branch as closed, hiding it from the branch list
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.TP
.B \-m,  \-\-message
.
use text as commit message
.TP
.B \-l,  \-\-logfile
.
read commit message from file
.TP
.B \-d,  \-\-date
.
record datecode as commit date
.TP
.B \-u,  \-\-user
.
record the specified user as committer
.UNINDENT
.sp
aliases: ci
.UNINDENT
.INDENT 0.0
.TP
.B \fBcopy [OPTION]... [SOURCE]... DEST\fP
.sp
Mark dest as having copies of source files. If dest is a
directory, copies are put in that directory. If dest is a file,
the source must be a single file.
.sp
By default, this command copies the contents of files as they
exist in the working directory. If invoked with \-A/\-\-after, the
operation is recorded, but no copying is performed.
.sp
This command takes effect with the next commit. To undo a copy
before that, see \%\fBhg revert\fP\:.
.sp
Returns 0 on success, 1 if errors are encountered.
.sp
options:
.INDENT 7.0
.TP
.B \-A,  \-\-after
.
record a copy that has already occurred
.TP
.B \-f,  \-\-force
.
forcibly copy over an existing managed file
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.TP
.B \-n,  \-\-dry\-run
.
do not perform actions, just print output
.UNINDENT
.sp
aliases: cp
.UNINDENT
.INDENT 0.0
.TP
.B \fBdiff [OPTION]... ([\-c REV] | [\-r REV1 [\-r REV2]]) [FILE]...\fP
.sp
Show differences between revisions for the specified files.
.sp
Differences between files are shown using the unified diff format.
.sp
NOTE: diff may generate unexpected results for merges, as it will
default to comparing against the working directory\(aqs first parent
changeset if no revisions are specified.
.sp
When two revision arguments are given, then changes are shown
between those revisions. If only one revision is specified then
that revision is compared to the working directory, and, when no
revisions are specified, the working directory files are compared
to its parent.
.sp
Alternatively you can specify \-c/\-\-change with a revision to see
the changes in that changeset relative to its first parent.
.sp
Without the \-a/\-\-text option, diff will avoid generating diffs of
files it detects as binary. With \-a, diff will generate a diff
anyway, probably with undesirable results.
.sp
Use the \-g/\-\-git option to generate diffs in the git extended diff
format. For more information, read \%\fBhg help diffs\fP\:.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-rev
.
revision
.TP
.B \-c,  \-\-change
.
change made by revision
.TP
.B \-a,  \-\-text
.
treat all files as text
.TP
.B \-g,  \-\-git
.
use git extended diff format
.TP
.B \-\-nodates
.
omit dates from diff headers
.TP
.B \-p,  \-\-show\-function
.
show which function each change is in
.TP
.B \-\-reverse
.
produce a diff that undoes the changes
.TP
.B \-w,  \-\-ignore\-all\-space
.
ignore white space when comparing lines
.TP
.B \-b,  \-\-ignore\-space\-change
.
ignore changes in the amount of white space
.TP
.B \-B,  \-\-ignore\-blank\-lines
.
ignore changes whose lines are all blank
.TP
.B \-U,  \-\-unified
.
number of lines of context to show
.TP
.B \-\-stat
.
output diffstat\-style summary of changes
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBexport [OPTION]... [\-o OUTFILESPEC] REV...\fP
.sp
Print the changeset header and diffs for one or more revisions.
.sp
The information shown in the changeset header is: author, date,
branch name (if non\-default), changeset hash, parent(s) and commit
comment.
.sp
NOTE: export may generate unexpected diff output for merge
changesets, as it will compare the merge changeset against its
first parent only.
.sp
Output may be to a file, in which case the name of the file is
given using a format string. The formatting rules are as follows:
.INDENT 7.0
.TP
.B \fB%%\fP
.sp
literal "%" character
.TP
.B \fB%H\fP
.sp
changeset hash (40 bytes of hexadecimal)
.TP
.B \fB%N\fP
.sp
number of patches being generated
.TP
.B \fB%R\fP
.sp
changeset revision number
.TP
.B \fB%b\fP
.sp
basename of the exporting repository
.TP
.B \fB%h\fP
.sp
short\-form changeset hash (12 bytes of hexadecimal)
.TP
.B \fB%n\fP
.sp
zero\-padded sequence number, starting at 1
.TP
.B \fB%r\fP
.sp
zero\-padded changeset revision number
.UNINDENT
.sp
Without the \-a/\-\-text option, export will avoid generating diffs
of files it detects as binary. With \-a, export will generate a
diff anyway, probably with undesirable results.
.sp
Use the \-g/\-\-git option to generate diffs in the git extended diff
format. See \%\fBhg help diffs\fP\: for more information.
.sp
With the \-\-switch\-parent option, the diff will be against the
second parent. It can be useful to review a merge.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-o,  \-\-output
.
print output to file with formatted name
.TP
.B \-\-switch\-parent
.
diff against the second parent
.TP
.B \-r,  \-\-rev
.
revisions to export
.TP
.B \-a,  \-\-text
.
treat all files as text
.TP
.B \-g,  \-\-git
.
use git extended diff format
.TP
.B \-\-nodates
.
omit dates from diff headers
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBforget [OPTION]... FILE...\fP
.sp
Mark the specified files so they will no longer be tracked
after the next commit.
.sp
This only removes files from the current branch, not from the
entire project history, and it does not delete them from the
working directory.
.sp
To undo a forget before the next commit, see \%\fBhg add\fP\:.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBgrep [OPTION]... PATTERN [FILE]...\fP
.sp
Search revisions of files for a regular expression.
.sp
This command behaves differently than Unix grep. It only accepts
Python/Perl regexps. It searches repository history, not the
working directory. It always prints the revision number in which a
match appears.
.sp
By default, grep only prints output for the first revision of a
file in which it finds a match. To get it to print every revision
that contains a change in match status ("\-" for a match that
becomes a non\-match, or "+" for a non\-match that becomes a match),
use the \-\-all flag.
.sp
Returns 0 if a match is found, 1 otherwise.
.sp
options:
.INDENT 7.0
.TP
.B \-0,  \-\-print0
.
end fields with NUL
.TP
.B \-\-all
.
print all revisions that match
.TP
.B \-f,  \-\-follow
.
follow changeset history, or file history across copies and renames
.TP
.B \-i,  \-\-ignore\-case
.
ignore case when matching
.TP
.B \-l,  \-\-files\-with\-matches
.
print only filenames and revisions that match
.TP
.B \-n,  \-\-line\-number
.
print matching line numbers
.TP
.B \-r,  \-\-rev
.
only search files changed within revision range
.TP
.B \-u,  \-\-user
.
list the author (long with \-v)
.TP
.B \-d,  \-\-date
.
list the date (short with \-q)
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBheads [\-ac] [\-r REV] [REV]...\fP
.sp
With no arguments, show all repository branch heads.
.sp
Repository "heads" are changesets with no child changesets. They are
where development generally takes place and are the usual targets
for update and merge operations. Branch heads are changesets that have
no child changeset on the same branch.
.sp
If one or more REVs are given, only branch heads on the branches
associated with the specified changesets are shown.
.sp
If \-c/\-\-closed is specified, also show branch heads marked closed
(see \%\fBhg commit \-\-close\-branch\fP\:).
.sp
If STARTREV is specified, only those heads that are descendants of
STARTREV will be displayed.
.sp
If \-t/\-\-topo is specified, named branch mechanics will be ignored and only
changesets without children will be shown.
.sp
Returns 0 if matching heads are found, 1 if not.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-rev
.
show only heads which are descendants of REV
.TP
.B \-t,  \-\-topo
.
show topological heads only
.TP
.B \-a,  \-\-active
.
show active branchheads only [DEPRECATED]
.TP
.B \-c,  \-\-closed
.
show normal and closed branch heads
.TP
.B \-\-style
.
display using template map file
.TP
.B \-\-template
.
display with template
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBhelp [TOPIC]\fP
.sp
With no arguments, print a list of commands with short help messages.
.sp
Given a topic, extension, or command name, print help for that
topic.
.sp
Returns 0 if successful.
.UNINDENT
.INDENT 0.0
.TP
.B \fBidentify [\-nibt] [\-r REV] [SOURCE]\fP
.sp
With no revision, print a summary of the current state of the
repository.
.sp
Specifying a path to a repository root or Mercurial bundle will
cause lookup to operate on that repository/bundle.
.sp
This summary identifies the repository state using one or two
parent hash identifiers, followed by a "+" if there are
uncommitted changes in the working directory, a list of tags for
this revision and a branch name for non\-default branches.
.sp
Returns 0 if successful.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-rev
.
identify the specified revision
.TP
.B \-n,  \-\-num
.
show local revision number
.TP
.B \-i,  \-\-id
.
show global revision id
.TP
.B \-b,  \-\-branch
.
show branch
.TP
.B \-t,  \-\-tags
.
show tags
.UNINDENT
.sp
aliases: id
.UNINDENT
.INDENT 0.0
.TP
.B \fBimport [OPTION]... PATCH...\fP
.sp
Import a list of patches and commit them individually (unless
\-\-no\-commit is specified).
.sp
If there are outstanding changes in the working directory, import
will abort unless given the \-f/\-\-force flag.
.sp
You can import a patch straight from a mail message. Even patches
as attachments work (to use the body part, it must have type
text/plain or text/x\-patch). From and Subject headers of email
message are used as default committer and commit message. All
text/plain body parts before first diff are added to commit
message.
.sp
If the imported patch was generated by \%\fBhg export\fP\:, user and
description from patch override values from message headers and
body. Values given on command line with \-m/\-\-message and \-u/\-\-user
override these.
.sp
If \-\-exact is specified, import will set the working directory to
the parent of each patch before applying it, and will abort if the
resulting changeset has a different ID than the one recorded in
the patch. This may happen due to character set problems or other
deficiencies in the text patch format.
.sp
With \-s/\-\-similarity, hg will attempt to discover renames and
copies in the patch in the same way as \(aqaddremove\(aq.
.sp
To read a patch from standard input, use "\-" as the patch name. If
a URL is specified, the patch will be downloaded from it.
See \%\fBhg help dates\fP\: for a list of formats valid for \-d/\-\-date.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-p,  \-\-strip
.
directory strip option for patch. This has the same meaning as the corresponding patch option (default: 1)
.TP
.B \-b,  \-\-base
.
base path
.TP
.B \-f,  \-\-force
.
skip check for outstanding uncommitted changes
.TP
.B \-\-no\-commit
.
don\(aqt commit, just update the working directory
.TP
.B \-\-exact
.
apply patch to the nodes from which it was generated
.TP
.B \-\-import\-branch
.
use any branch information in patch (implied by \-\-exact)
.TP
.B \-m,  \-\-message
.
use text as commit message
.TP
.B \-l,  \-\-logfile
.
read commit message from file
.TP
.B \-d,  \-\-date
.
record datecode as commit date
.TP
.B \-u,  \-\-user
.
record the specified user as committer
.TP
.B \-s,  \-\-similarity
.
guess renamed files by similarity (0<=s<=100)
.UNINDENT
.sp
aliases: patch
.UNINDENT
.INDENT 0.0
.TP
.B \fBincoming [\-p] [\-n] [\-M] [\-f] [\-r REV]... [\-\-bundle FILENAME] [SOURCE]\fP
.sp
Show new changesets found in the specified path/URL or the default
pull location. These are the changesets that would have been pulled
if a pull at the time you issued this command.
.sp
For remote repository, using \-\-bundle avoids downloading the
changesets twice if the incoming is followed by a pull.
.sp
See pull for valid source format details.
.sp
Returns 0 if there are incoming changes, 1 otherwise.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-force
.
run even if remote repository is unrelated
.TP
.B \-n,  \-\-newest\-first
.
show newest record first
.TP
.B \-\-bundle
.
file to store the bundles into
.TP
.B \-r,  \-\-rev
.
a remote changeset intended to be added
.TP
.B \-b,  \-\-branch
.
a specific branch you would like to pull
.TP
.B \-p,  \-\-patch
.
show patch
.TP
.B \-g,  \-\-git
.
use git extended diff format
.TP
.B \-l,  \-\-limit
.
limit number of changes displayed
.TP
.B \-M,  \-\-no\-merges
.
do not show merges
.TP
.B \-\-stat
.
output diffstat\-style summary of changes
.TP
.B \-\-style
.
display using template map file
.TP
.B \-\-template
.
display with template
.TP
.B \-e,  \-\-ssh
.
specify ssh command to use
.TP
.B \-\-remotecmd
.
specify hg command to run on the remote side
.UNINDENT
.sp
aliases: in
.UNINDENT
.INDENT 0.0
.TP
.B \fBinit [\-e CMD] [\-\-remotecmd CMD] [DEST]\fP
.sp
Initialize a new repository in the given directory. If the given
directory does not exist, it will be created.
.sp
If no directory is given, the current directory is used.
.sp
It is possible to specify an \fBssh://\fP URL as the destination.
See \%\fBhg help urls\fP\: for more information.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-e,  \-\-ssh
.
specify ssh command to use
.TP
.B \-\-remotecmd
.
specify hg command to run on the remote side
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBlocate [OPTION]... [PATTERN]...\fP
.sp
Print files under Mercurial control in the working directory whose
names match the given patterns.
.sp
By default, this command searches all directories in the working
directory. To search just the current directory and its
subdirectories, use "\-\-include .".
.sp
If no patterns are given to match, this command prints the names
of all files under Mercurial control in the working directory.
.sp
If you want to feed the output of this command into the "xargs"
command, use the \-0 option to both this command and "xargs". This
will avoid the problem of "xargs" treating single filenames that
contain whitespace as multiple filenames.
.sp
Returns 0 if a match is found, 1 otherwise.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-rev
.
search the repository as it is in REV
.TP
.B \-0,  \-\-print0
.
end filenames with NUL, for use with xargs
.TP
.B \-f,  \-\-fullpath
.
print complete paths from the filesystem root
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBlog [OPTION]... [FILE]\fP
.sp
Print the revision history of the specified files or the entire
project.
.sp
File history is shown without following rename or copy history of
files. Use \-f/\-\-follow with a filename to follow history across
renames and copies. \-\-follow without a filename will only show
ancestors or descendants of the starting revision. \-\-follow\-first
only follows the first parent of merge revisions.
.sp
If no revision range is specified, the default is \%tip:0\: unless
\-\-follow is set, in which case the working directory parent is
used as the starting revision. You can specify a revision set for
log, see \%\fBhg help revsets\fP\: for more information.
.sp
See \%\fBhg help dates\fP\: for a list of formats valid for \-d/\-\-date.
.sp
By default this command prints revision number and changeset id,
tags, non\-trivial parents, user, date and time, and a summary for
each commit. When the \-v/\-\-verbose switch is used, the list of
changed files and full commit message are shown.
.sp
NOTE: log \-p/\-\-patch may generate unexpected diff output for merge
changesets, as it will only compare the merge changeset against
its first parent. Also, only files different from BOTH parents
will appear in files:.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-follow
.
follow changeset history, or file history across copies and renames
.TP
.B \-\-follow\-first
.
only follow the first parent of merge changesets
.TP
.B \-d,  \-\-date
.
show revisions matching date spec
.TP
.B \-C,  \-\-copies
.
show copied files
.TP
.B \-k,  \-\-keyword
.
do case\-insensitive search for a given text
.TP
.B \-r,  \-\-rev
.
show the specified revision or range
.TP
.B \-\-removed
.
include revisions where files were removed
.TP
.B \-m,  \-\-only\-merges
.
show only merges
.TP
.B \-u,  \-\-user
.
revisions committed by user
.TP
.B \-\-only\-branch
.
show only changesets within the given named branch (DEPRECATED)
.TP
.B \-b,  \-\-branch
.
show changesets within the given named branch
.TP
.B \-P,  \-\-prune
.
do not display revision or any of its ancestors
.TP
.B \-p,  \-\-patch
.
show patch
.TP
.B \-g,  \-\-git
.
use git extended diff format
.TP
.B \-l,  \-\-limit
.
limit number of changes displayed
.TP
.B \-M,  \-\-no\-merges
.
do not show merges
.TP
.B \-\-stat
.
output diffstat\-style summary of changes
.TP
.B \-\-style
.
display using template map file
.TP
.B \-\-template
.
display with template
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.sp
aliases: history
.UNINDENT
.INDENT 0.0
.TP
.B \fBmanifest [\-r REV]\fP
.sp
Print a list of version controlled files for the given revision.
If no revision is given, the first parent of the working directory
is used, or the null revision if no revision is checked out.
.sp
With \-v, print file permissions, symlink and executable bits.
With \-\-debug, print file revision hashes.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-rev
.
revision to display
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBmerge [\-P] [\-f] [[\-r] REV]\fP
.sp
The current working directory is updated with all changes made in
the requested revision since the last common predecessor revision.
.sp
Files that changed between either parent are marked as changed for
the next commit and a commit must be performed before any further
updates to the repository are allowed. The next commit will have
two parents.
.sp
If no revision is specified, the working directory\(aqs parent is a
head revision, and the current branch contains exactly one other
head, the other head is merged with by default. Otherwise, an
explicit revision with which to merge with must be provided.
.sp
To undo an uncommitted merge, use \%\fBhg update \-\-clean .\fP\: which
will check out a clean copy of the original merge parent, losing
all changes.
.sp
Returns 0 on success, 1 if there are unresolved files.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-force
.
force a merge with outstanding changes
.TP
.B \-r,  \-\-rev
.
revision to merge
.TP
.B \-P,  \-\-preview
.
review revisions to merge (no merge is performed)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBoutgoing [\-M] [\-p] [\-n] [\-f] [\-r REV]... [DEST]\fP
.sp
Show changesets not found in the specified destination repository
or the default push location. These are the changesets that would
be pushed if a push was requested.
.sp
See pull for details of valid destination formats.
.sp
Returns 0 if there are outgoing changes, 1 otherwise.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-force
.
run even when the destination is unrelated
.TP
.B \-r,  \-\-rev
.
a changeset intended to be included in the destination
.TP
.B \-n,  \-\-newest\-first
.
show newest record first
.TP
.B \-b,  \-\-branch
.
a specific branch you would like to push
.TP
.B \-p,  \-\-patch
.
show patch
.TP
.B \-g,  \-\-git
.
use git extended diff format
.TP
.B \-l,  \-\-limit
.
limit number of changes displayed
.TP
.B \-M,  \-\-no\-merges
.
do not show merges
.TP
.B \-\-stat
.
output diffstat\-style summary of changes
.TP
.B \-\-style
.
display using template map file
.TP
.B \-\-template
.
display with template
.TP
.B \-e,  \-\-ssh
.
specify ssh command to use
.TP
.B \-\-remotecmd
.
specify hg command to run on the remote side
.UNINDENT
.sp
aliases: out
.UNINDENT
.INDENT 0.0
.TP
.B \fBparents [\-r REV] [FILE]\fP
.sp
Print the working directory\(aqs parent revisions. If a revision is
given via \-r/\-\-rev, the parent of that revision will be printed.
If a file argument is given, the revision in which the file was
last changed (before the working directory revision or the
argument to \-\-rev if given) is printed.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-r,  \-\-rev
.
show parents of the specified revision
.TP
.B \-\-style
.
display using template map file
.TP
.B \-\-template
.
display with template
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBpaths [NAME]\fP
.sp
Show definition of symbolic path name NAME. If no name is given,
show definition of all available names.
.sp
Path names are defined in the [paths] section of
\fB/etc/mercurial/hgrc\fP and \fB$HOME/.hgrc\fP. If run inside a
repository, \fB.hg/hgrc\fP is used, too.
.sp
The path names \fBdefault\fP and \fBdefault\-push\fP have a special
meaning.  When performing a push or pull operation, they are used
as fallbacks if no location is specified on the command\-line.
When \fBdefault\-push\fP is set, it will be used for push and
\fBdefault\fP will be used for pull; otherwise \fBdefault\fP is used
as the fallback for both.  When cloning a repository, the clone
source is written as \fBdefault\fP in \fB.hg/hgrc\fP.  Note that
\fBdefault\fP and \fBdefault\-push\fP apply to all inbound (e.g.
\%\fBhg incoming\fP\:) and outbound (e.g. \%\fBhg outgoing\fP\:, \%\fBhg email\fP\: and
\%\fBhg bundle\fP\:) operations.
.sp
See \%\fBhg help urls\fP\: for more information.
.sp
Returns 0 on success.
.UNINDENT
.INDENT 0.0
.TP
.B \fBpull [\-u] [\-f] [\-r REV]... [\-e CMD] [\-\-remotecmd CMD] [SOURCE]\fP
.sp
Pull changes from a remote repository to a local one.
.sp
This finds all changes from the repository at the specified path
or URL and adds them to a local repository (the current one unless
\-R is specified). By default, this does not update the copy of the
project in the working directory.
.sp
Use \%\fBhg incoming\fP\: if you want to see what would have been added
by a pull at the time you issued this command. If you then decide
to add those changes to the repository, you should use \%\fBhg pull
\-r X\fP\: where \fBX\fP is the last changeset listed by \%\fBhg incoming\fP\:.
.sp
If SOURCE is omitted, the \(aqdefault\(aq path will be used.
See \%\fBhg help urls\fP\: for more information.
.sp
Returns 0 on success, 1 if an update had unresolved files.
.sp
options:
.INDENT 7.0
.TP
.B \-u,  \-\-update
.
update to new branch head if changesets were pulled
.TP
.B \-f,  \-\-force
.
run even when remote repository is unrelated
.TP
.B \-r,  \-\-rev
.
a remote changeset intended to be added
.TP
.B \-b,  \-\-branch
.
a specific branch you would like to pull
.TP
.B \-e,  \-\-ssh
.
specify ssh command to use
.TP
.B \-\-remotecmd
.
specify hg command to run on the remote side
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBpush [\-f] [\-r REV]... [\-e CMD] [\-\-remotecmd CMD] [DEST]\fP
.sp
Push changesets from the local repository to the specified
destination.
.sp
This operation is symmetrical to pull: it is identical to a pull
in the destination repository from the current one.
.sp
By default, push will not allow creation of new heads at the
destination, since multiple heads would make it unclear which head
to use. In this situation, it is recommended to pull and merge
before pushing.
.sp
Use \-\-new\-branch if you want to allow push to create a new named
branch that is not present at the destination. This allows you to
only create a new branch without forcing other changes.
.sp
Use \-f/\-\-force to override the default behavior and push all
changesets on all branches.
.sp
If \-r/\-\-rev is used, the specified revision and all its ancestors
will be pushed to the remote repository.
.sp
Please see \%\fBhg help urls\fP\: for important details about \fBssh://\fP
URLs. If DESTINATION is omitted, a default path will be used.
.sp
Returns 0 if push was successful, 1 if nothing to push.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-force
.
force push
.TP
.B \-r,  \-\-rev
.
a changeset intended to be included in the destination
.TP
.B \-b,  \-\-branch
.
a specific branch you would like to push
.TP
.B \-\-new\-branch
.
allow pushing a new branch
.TP
.B \-e,  \-\-ssh
.
specify ssh command to use
.TP
.B \-\-remotecmd
.
specify hg command to run on the remote side
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBrecover\fP
.sp
Recover from an interrupted commit or pull.
.sp
This command tries to fix the repository status after an
interrupted operation. It should only be necessary when Mercurial
suggests it.
.sp
Returns 0 if successful, 1 if nothing to recover or verify fails.
.UNINDENT
.INDENT 0.0
.TP
.B \fBremove [OPTION]... FILE...\fP
.sp
Schedule the indicated files for removal from the repository.
.sp
This only removes files from the current branch, not from the
entire project history. \-A/\-\-after can be used to remove only
files that have already been deleted, \-f/\-\-force can be used to
force deletion, and \-Af can be used to remove files from the next
revision without deleting them from the working directory.
.sp
The following table details the behavior of remove for different
file states (columns) and option combinations (rows). The file
states are Added [A], Clean [C], Modified [M] and Missing [!] (as
reported by \%\fBhg status\fP\:). The actions are Warn, Remove (from
branch) and Delete (from disk):
.sp
.nf
.ft C
       A  C  M  !
none   W  RD W  R
\-f     R  RD RD R
\-A     W  W  W  R
\-Af    R  R  R  R
.ft P
.fi
.sp
This command schedules the files to be removed at the next commit.
To undo a remove before that, see \%\fBhg revert\fP\:.
.sp
Returns 0 on success, 1 if any warnings encountered.
.sp
options:
.INDENT 7.0
.TP
.B \-A,  \-\-after
.
record delete for missing files
.TP
.B \-f,  \-\-force
.
remove (and delete) file even if added or modified
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.sp
aliases: rm
.UNINDENT
.INDENT 0.0
.TP
.B \fBrename [OPTION]... SOURCE... DEST\fP
.sp
Mark dest as copies of sources; mark sources for deletion. If dest
is a directory, copies are put in that directory. If dest is a
file, there can only be one source.
.sp
By default, this command copies the contents of files as they
exist in the working directory. If invoked with \-A/\-\-after, the
operation is recorded, but no copying is performed.
.sp
This command takes effect at the next commit. To undo a rename
before that, see \%\fBhg revert\fP\:.
.sp
Returns 0 on success, 1 if errors are encountered.
.sp
options:
.INDENT 7.0
.TP
.B \-A,  \-\-after
.
record a rename that has already occurred
.TP
.B \-f,  \-\-force
.
forcibly copy over an existing managed file
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.TP
.B \-n,  \-\-dry\-run
.
do not perform actions, just print output
.UNINDENT
.sp
aliases: mv
.UNINDENT
.INDENT 0.0
.TP
.B \fBresolve [OPTION]... [FILE]...\fP
.sp
This command includes several actions that are often useful while
performing a merge, after running \fBmerge\fP but before running
\fBcommit\fP.  (It is only meaningful if your working directory has
two parents.)  It is most relevant for merges with unresolved
conflicts, which are typically a result of non\-interactive merging with
\fBinternal:merge\fP or a command\-line merge tool like \fBdiff3\fP.
.sp
The available actions are:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
.
list files that were merged with conflicts (U, for unresolved)
and without conflicts (R, for resolved): \fBhg resolve \-l\fP
(this is like \fBstatus\fP for merges)
.IP 2. 3
.
record that you have resolved conflicts in certain files:
\fBhg resolve \-m [file ...]\fP (default: mark all unresolved files)
.IP 3. 3
.
forget that you have resolved conflicts in certain files:
\fBhg resolve \-u [file ...]\fP (default: unmark all resolved files)
.IP 4. 3
.
discard your current attempt(s) at resolving conflicts and
restart the merge from scratch: \fBhg resolve file...\fP
(or \fB\-a\fP for all unresolved files)
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Note that Mercurial will not let you commit files with unresolved merge
conflicts.  You must use \fBhg resolve \-m ...\fP before you can commit
after a conflicting merge.
.sp
Returns 0 on success, 1 if any files fail a resolve attempt.
.sp
options:
.INDENT 7.0
.TP
.B \-a,  \-\-all
.
select all unresolved files
.TP
.B \-l,  \-\-list
.
list state of files needing merge
.TP
.B \-m,  \-\-mark
.
mark files as resolved
.TP
.B \-u,  \-\-unmark
.
unmark files as resolved
.TP
.B \-n,  \-\-no\-status
.
hide status prefix
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBrevert [OPTION]... [\-r REV] [NAME]...\fP
.sp
NOTE: This command is most likely not what you are looking for. revert
will partially overwrite content in the working directory without changing
the working directory parents. Use \%\fBhg update \-r rev\fP\: to check out earlier
revisions, or \%\fBhg update \-\-clean .\fP\: to undo a merge which has added
another parent.
.sp
With no revision specified, revert the named files or directories
to the contents they had in the parent of the working directory.
This restores the contents of the affected files to an unmodified
state and unschedules adds, removes, copies, and renames. If the
working directory has two parents, you must explicitly specify a
revision.
.sp
Using the \-r/\-\-rev option, revert the given files or directories
to their contents as of a specific revision. This can be helpful
to "roll back" some or all of an earlier change. See \%\fBhg help
dates\fP\: for a list of formats valid for \-d/\-\-date.
.sp
Revert modifies the working directory. It does not commit any
changes, or change the parent of the working directory. If you
revert to a revision other than the parent of the working
directory, the reverted files will thus appear modified
afterwards.
.sp
If a file has been deleted, it is restored. If the executable mode
of a file was changed, it is reset.
.sp
If names are given, all files matching the names are reverted.
If no arguments are given, no files are reverted.
.sp
Modified files are saved with a .orig suffix before reverting.
To disable these backups, use \-\-no\-backup.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-a,  \-\-all
.
revert all changes when no arguments given
.TP
.B \-d,  \-\-date
.
tipmost revision matching date
.TP
.B \-r,  \-\-rev
.
revert to the specified revision
.TP
.B \-\-no\-backup
.
do not save backup copies of files
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.TP
.B \-n,  \-\-dry\-run
.
do not perform actions, just print output
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBrollback\fP
.sp
This command should be used with care. There is only one level of
rollback, and there is no way to undo a rollback. It will also
restore the dirstate at the time of the last transaction, losing
any dirstate changes since that time. This command does not alter
the working directory.
.sp
Transactions are used to encapsulate the effects of all commands
that create new changesets or propagate existing changesets into a
repository. For example, the following commands are transactional,
and their effects can be rolled back:
.INDENT 7.0
.IP \(bu 2
.
commit
.IP \(bu 2
.
import
.IP \(bu 2
.
pull
.IP \(bu 2
.
push (with this repository as the destination)
.IP \(bu 2
.
unbundle
.UNINDENT
.sp
This command is not intended for use on public repositories. Once
changes are visible for pull by other users, rolling a transaction
back locally is ineffective (someone else may already have pulled
the changes). Furthermore, a race is possible with readers of the
repository; for example an in\-progress pull from the repository
may fail if a rollback is performed.
.sp
Returns 0 on success, 1 if no rollback data is available.
.sp
options:
.INDENT 7.0
.TP
.B \-n,  \-\-dry\-run
.
do not perform actions, just print output
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBroot\fP
.sp
Print the root directory of the current repository.
.sp
Returns 0 on success.
.UNINDENT
.INDENT 0.0
.TP
.B \fBserve [OPTION]...\fP
.sp
Start a local HTTP repository browser and pull server. You can use
this for ad\-hoc sharing and browing of repositories. It is
recommended to use a real web server to serve a repository for
longer periods of time.
.sp
Please note that the server does not implement access control.
This means that, by default, anybody can read from the server and
nobody can write to it by default. Set the \fBweb.allow_push\fP
option to \fB*\fP to allow everybody to push to the server. You
should use a real web server if you need to authenticate users.
.sp
By default, the server logs accesses to stdout and errors to
stderr. Use the \-A/\-\-accesslog and \-E/\-\-errorlog options to log to
files.
.sp
To have the server choose a free port number to listen on, specify
a port number of 0; in this case, the server will print the port
number it uses.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-A,  \-\-accesslog
.
name of access log file to write to
.TP
.B \-d,  \-\-daemon
.
run server in background
.TP
.B \-\-daemon\-pipefds
.
used internally by daemon mode
.TP
.B \-E,  \-\-errorlog
.
name of error log file to write to
.TP
.B \-p,  \-\-port
.
port to listen on (default: 8000)
.TP
.B \-a,  \-\-address
.
address to listen on (default: all interfaces)
.TP
.B \-\-prefix
.
prefix path to serve from (default: server root)
.TP
.B \-n,  \-\-name
.
name to show in web pages (default: working directory)
.TP
.B \-\-web\-conf
.
name of the hgweb config file (serve more than one repository)
.TP
.B \-\-webdir\-conf
.
name of the hgweb config file (DEPRECATED)
.TP
.B \-\-pid\-file
.
name of file to write process ID to
.TP
.B \-\-stdio
.
for remote clients
.TP
.B \-t,  \-\-templates
.
web templates to use
.TP
.B \-\-style
.
template style to use
.TP
.B \-6,  \-\-ipv6
.
use IPv6 in addition to IPv4
.TP
.B \-\-certificate
.
SSL certificate file
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBshowconfig [\-u] [NAME]...\fP
.sp
With no arguments, print names and values of all config items.
.sp
With one argument of the form section.name, print just the value
of that config item.
.sp
With multiple arguments, print names and values of all config
items with matching section names.
.sp
With \-\-debug, the source (filename and line number) is printed
for each config item.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-u,  \-\-untrusted
.
show untrusted configuration options
.UNINDENT
.sp
aliases: debugconfig
.UNINDENT
.INDENT 0.0
.TP
.B \fBstatus [OPTION]... [FILE]...\fP
.sp
Show status of files in the repository. If names are given, only
files that match are shown. Files that are clean or ignored or
the source of a copy/move operation, are not listed unless
\-c/\-\-clean, \-i/\-\-ignored, \-C/\-\-copies or \-A/\-\-all are given.
Unless options described with "show only ..." are given, the
options \-mardu are used.
.sp
Option \-q/\-\-quiet hides untracked (unknown and ignored) files
unless explicitly requested with \-u/\-\-unknown or \-i/\-\-ignored.
.sp
NOTE: status may appear to disagree with diff if permissions have
changed or a merge has occurred. The standard diff format does not
report permission changes and diff only reports changes relative
to one merge parent.
.sp
If one revision is given, it is used as the base revision.
If two revisions are given, the differences between them are
shown. The \-\-change option can also be used as a shortcut to list
the changed files of a revision from its first parent.
.sp
The codes used to show the status of files are:
.sp
.nf
.ft C
M = modified
A = added
R = removed
C = clean
! = missing (deleted by non\-hg command, but still tracked)
? = not tracked
I = ignored
  = origin of the previous file listed as A (added)
.ft P
.fi
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-A,  \-\-all
.
show status of all files
.TP
.B \-m,  \-\-modified
.
show only modified files
.TP
.B \-a,  \-\-added
.
show only added files
.TP
.B \-r,  \-\-removed
.
show only removed files
.TP
.B \-d,  \-\-deleted
.
show only deleted (but tracked) files
.TP
.B \-c,  \-\-clean
.
show only files without changes
.TP
.B \-u,  \-\-unknown
.
show only unknown (not tracked) files
.TP
.B \-i,  \-\-ignored
.
show only ignored files
.TP
.B \-n,  \-\-no\-status
.
hide status prefix
.TP
.B \-C,  \-\-copies
.
show source of copied files
.TP
.B \-0,  \-\-print0
.
end filenames with NUL, for use with xargs
.TP
.B \-\-rev
.
show difference from revision
.TP
.B \-\-change
.
list the changed files of a revision
.TP
.B \-I,  \-\-include
.
include names matching the given patterns
.TP
.B \-X,  \-\-exclude
.
exclude names matching the given patterns
.UNINDENT
.sp
aliases: st
.UNINDENT
.INDENT 0.0
.TP
.B \fBsummary [\-\-remote]\fP
.sp
This generates a brief summary of the working directory state,
including parents, branch, commit status, and available updates.
.sp
With the \-\-remote option, this will check the default paths for
incoming and outgoing changes. This can be time\-consuming.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-\-remote
.
check for push and pull
.UNINDENT
.sp
aliases: sum
.UNINDENT
.INDENT 0.0
.TP
.B \fBtag [\-f] [\-l] [\-m TEXT] [\-d DATE] [\-u USER] [\-r REV] NAME...\fP
.sp
Name a particular revision using <name>.
.sp
Tags are used to name particular revisions of the repository and are
very useful to compare different revisions, to go back to significant
earlier versions or to mark branch points as releases, etc.
.sp
If no revision is given, the parent of the working directory is
used, or tip if no revision is checked out.
.sp
To facilitate version control, distribution, and merging of tags,
they are stored as a file named ".hgtags" which is managed
similarly to other project files and can be hand\-edited if
necessary. The file \(aq.hg/localtags\(aq is used for local tags (not
shared among repositories).
.sp
See \%\fBhg help dates\fP\: for a list of formats valid for \-d/\-\-date.
.sp
Since tag names have priority over branch names during revision
lookup, using an existing branch name as a tag name is discouraged.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-f,  \-\-force
.
replace existing tag
.TP
.B \-l,  \-\-local
.
make the tag local
.TP
.B \-r,  \-\-rev
.
revision to tag
.TP
.B \-\-remove
.
remove a tag
.TP
.B \-e,  \-\-edit
.
edit commit message
.TP
.B \-m,  \-\-message
.
use <text> as commit message
.TP
.B \-d,  \-\-date
.
record datecode as commit date
.TP
.B \-u,  \-\-user
.
record the specified user as committer
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBtags\fP
.sp
This lists both regular and local tags. When the \-v/\-\-verbose
switch is used, a third column "local" is printed for local tags.
.sp
Returns 0 on success.
.UNINDENT
.INDENT 0.0
.TP
.B \fBtip [\-p] [\-g]\fP
.sp
The tip revision (usually just called the tip) is the changeset
most recently added to the repository (and therefore the most
recently changed head).
.sp
If you have just made a commit, that commit will be the tip. If
you have just pulled changes from another repository, the tip of
that repository becomes the current tip. The "tip" tag is special
and cannot be renamed or assigned to a different changeset.
.sp
Returns 0 on success.
.sp
options:
.INDENT 7.0
.TP
.B \-p,  \-\-patch
.
show patch
.TP
.B \-g,  \-\-git
.
use git extended diff format
.TP
.B \-\-style
.
display using template map file
.TP
.B \-\-template
.
display with template
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBunbundle [\-u] FILE...\fP
.sp
Apply one or more compressed changegroup files generated by the
bundle command.
.sp
Returns 0 on success, 1 if an update has unresolved files.
.sp
options:
.INDENT 7.0
.TP
.B \-u,  \-\-update
.
update to new branch head if changesets were unbundled
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \fBupdate [\-c] [\-C] [\-d DATE] [[\-r] REV]\fP
.sp
Update the repository\(aqs working directory to the specified
changeset.
.sp
If no changeset is specified, attempt to update to the tip of the
current branch. If this changeset is a descendant of the working
directory\(aqs parent, update to it, otherwise abort.
.sp
The following rules apply when the working directory contains
uncommitted changes:
.INDENT 7.0
.IP 1. 3
.
If neither \-c/\-\-check nor \-C/\-\-clean is specified, and if
the requested changeset is an ancestor or descendant of
the working directory\(aqs parent, the uncommitted changes
are merged into the requested changeset and the merged
result is left uncommitted. If the requested changeset is
not an ancestor or descendant (that is, it is on another
branch), the update is aborted and the uncommitted changes
are preserved.
.IP 2. 3
.
With the \-c/\-\-check option, the update is aborted and the
uncommitted changes are preserved.
.IP 3. 3
.
With the \-C/\-\-clean option, uncommitted changes are discarded and
the working directory is updated to the requested changeset.
.UNINDENT
.sp
Use null as the changeset to remove the working directory (like
\%\fBhg clone \-U\fP\:).
.sp
If you want to update just one file to an older changeset, use \%\fBhg revert\fP\:.
.sp
See \%\fBhg help dates\fP\: for a list of formats valid for \-d/\-\-date.
.sp
Returns 0 on success, 1 if there are unresolved files.
.sp
options:
.INDENT 7.0
.TP
.B \-C,  \-\-clean
.
discard uncommitted changes (no backup)
.TP
.B \-c,  \-\-check
.
check for uncommitted changes
.TP
.B \-d,  \-\-date
.
tipmost revision matching date
.TP
.B \-r,  \-\-rev
.
revision
.UNINDENT
.sp
aliases: up checkout co
.UNINDENT
.INDENT 0.0
.TP
.B \fBverify\fP
.sp
Verify the integrity of the current repository.
.sp
This will perform an extensive check of the repository\(aqs
integrity, validating the hashes and checksums of each entry in
the changelog, manifest, and tracked files, as well as the
integrity of their crosslinks and indices.
.sp
Returns 0 on success, 1 if errors are encountered.
.UNINDENT
.INDENT 0.0
.TP
.B \fBversion\fP
.sp
output version and copyright information
.UNINDENT
.SH CONFIGURATION FILES
.sp
Mercurial reads configuration data from several files, if they exist.
Below we list the most specific file first.
.sp
On Windows, these configuration files are read:
.INDENT 0.0
.IP \(bu 2
.
\fB<repo>\e.hg\ehgrc\fP
.IP \(bu 2
.
\fB%USERPROFILE%\e.hgrc\fP
.IP \(bu 2
.
\fB%USERPROFILE%\emercurial.ini\fP
.IP \(bu 2
.
\fB%HOME%\e.hgrc\fP
.IP \(bu 2
.
\fB%HOME%\emercurial.ini\fP
.IP \(bu 2
.
\fBC:\emercurial\emercurial.ini\fP (unless regkey or hgrc.dor mercurial.ini found)
.IP \(bu 2
.
\fBHKEY_LOCAL_MACHINE\eSOFTWARE\eMercurial\fP (unless hgrc.dor mercurial.ini found)
.IP \(bu 2
.
\fB<hg.exe\-dir>\ehgrc.d\e*.rc\fP (unless mercurial.ini found)
.IP \(bu 2
.
\fB<hg.exe\-dir>\emercurial.ini\fP
.UNINDENT
.sp
On Unix, these files are read:
.INDENT 0.0
.IP \(bu 2
.
\fB<repo>/.hg/hgrc\fP
.IP \(bu 2
.
\fB$HOME/.hgrc\fP
.IP \(bu 2
.
\fB/etc/mercurial/hgrc\fP
.IP \(bu 2
.
\fB/etc/mercurial/hgrc.d/*.rc\fP
.IP \(bu 2
.
\fB<install\-root>/etc/mercurial/hgrc\fP
.IP \(bu 2
.
\fB<install\-root>/etc/mercurial/hgrc.d/*.rc\fP
.UNINDENT
.sp
If there is a per\-repository configuration file which is not owned by
the active user, Mercurial will warn you that the file is skipped:
.sp
.nf
.ft C
not trusting file <repo>/.hg/hgrc from untrusted user USER, group GROUP
.ft P
.fi
.sp
If this bothers you, the warning can be silenced (the file would still
be ignored) or trust can be established. Use one of the following
settings, the syntax is explained below:
.INDENT 0.0
.IP \(bu 2
.
\fBui.report_untrusted = False\fP
.IP \(bu 2
.
\fBtrusted.users = USER\fP
.IP \(bu 2
.
\fBtrusted.groups = GROUP\fP
.UNINDENT
.sp
The configuration files for Mercurial use a simple ini\-file format. A
configuration file consists of sections, led by a \fB[section]\fP header
and followed by \fBname = value\fP entries:
.sp
.nf
.ft C
[ui]
username = Firstname Lastname <firstname.lastname@example.net>
verbose = True
.ft P
.fi
.sp
The above entries will be referred to as \fBui.username\fP and
\fBui.verbose\fP, respectively. Please see the hgrc man page for a full
description of the possible configuration values:
.INDENT 0.0
.IP \(bu 2
.
on Unix\-like systems: \fBman hgrc\fP
.IP \(bu 2
.
online: \%http://www.selenic.com/mercurial/hgrc.5.html\:
.UNINDENT
.SH DATE FORMATS
.sp
Some commands allow the user to specify a date, e.g.:
.INDENT 0.0
.IP \(bu 2
.
backout, commit, import, tag: Specify the commit date.
.IP \(bu 2
.
log, revert, update: Select revision(s) by date.
.UNINDENT
.sp
Many date formats are valid. Here are some examples:
.INDENT 0.0
.IP \(bu 2
.
\fBWed Dec 6 13:18:29 2006\fP (local timezone assumed)
.IP \(bu 2
.
\fBDec 6 13:18 \-0600\fP (year assumed, time offset provided)
.IP \(bu 2
.
\fBDec 6 13:18 UTC\fP (UTC and GMT are aliases for +0000)
.IP \(bu 2
.
\fBDec 6\fP (midnight)
.IP \(bu 2
.
\fB13:18\fP (today assumed)
.IP \(bu 2
.
\fB3:39\fP (3:39AM assumed)
.IP \(bu 2
.
\fB3:39pm\fP (15:39)
.IP \(bu 2
.
\fB2006\-12\-06 13:18:29\fP (ISO 8601 format)
.IP \(bu 2
.
\fB2006\-12\-6 13:18\fP
.IP \(bu 2
.
\fB2006\-12\-6\fP
.IP \(bu 2
.
\fB12\-6\fP
.IP \(bu 2
.
\fB12/6\fP
.IP \(bu 2
.
\fB12/6/6\fP (Dec 6 2006)
.UNINDENT
.sp
Lastly, there is Mercurial\(aqs internal format:
.INDENT 0.0
.IP \(bu 2
.
\fB1165432709 0\fP (Wed Dec 6 13:18:29 2006 UTC)
.UNINDENT
.sp
This is the internal representation format for dates. unixtime is the
number of seconds since the epoch (1970\-01\-01 00:00 UTC). offset is
the offset of the local timezone, in seconds west of UTC (negative if
the timezone is east of UTC).
.sp
The log command also accepts date ranges:
.INDENT 0.0
.IP \(bu 2
.
\fB<{datetime}\fP \- at or before a given date/time
.IP \(bu 2
.
\fB>{datetime}\fP \- on or after a given date/time
.IP \(bu 2
.
\fB{datetime} to {datetime}\fP \- a date range, inclusive
.IP \(bu 2
.
\fB\-{days}\fP \- within a given number of days of today
.UNINDENT
.SH FILE NAME PATTERNS
.sp
Mercurial accepts several notations for identifying one or more files
at a time.
.sp
By default, Mercurial treats filenames as shell\-style extended glob
patterns.
.sp
Alternate pattern notations must be specified explicitly.
.sp
To use a plain path name without any pattern matching, start it with
\fBpath:\fP. These path names must completely match starting at the
current repository root.
.sp
To use an extended glob, start a name with \fBglob:\fP. Globs are rooted
at the current directory; a glob such as \fB*.c\fP will only match files
in the current directory ending with \fB.c\fP.
.sp
The supported glob syntax extensions are \fB**\fP to match any string
across path separators and \fB{a,b}\fP to mean "a or b".
.sp
To use a Perl/Python regular expression, start a name with \fBre:\fP.
Regexp pattern matching is anchored at the root of the repository.
.sp
Plain examples:
.sp
.nf
.ft C
path:foo/bar   a name bar in a directory named foo in the root
               of the repository
path:path:name a file or directory named "path:name"
.ft P
.fi
.sp
Glob examples:
.sp
.nf
.ft C
glob:*.c       any name ending in ".c" in the current directory
*.c            any name ending in ".c" in the current directory
**.c           any name ending in ".c" in any subdirectory of the
               current directory including itself.
foo/*.c        any name ending in ".c" in the directory foo
foo/**.c       any name ending in ".c" in any subdirectory of foo
               including itself.
.ft P
.fi
.sp
Regexp examples:
.sp
.nf
.ft C
re:.*\e.c$      any name ending in ".c", anywhere in the repository
.ft P
.fi
.SH ENVIRONMENT VARIABLES
.INDENT 0.0
.TP
.B HG
.
Path to the \(aqhg\(aq executable, automatically passed when running
hooks, extensions or external tools. If unset or empty, this is
the hg executable\(aqs name if it\(aqs frozen, or an executable named
\(aqhg\(aq (with %PATHEXT% [defaulting to COM/EXE/BAT/CMD] extensions on
Windows) is searched.
.TP
.B HGEDITOR
.
This is the name of the editor to run when committing. See EDITOR.
.sp
(deprecated, use .hgrc)
.TP
.B HGENCODING
.
This overrides the default locale setting detected by Mercurial.
This setting is used to convert data including usernames,
changeset descriptions, tag names, and branches. This setting can
be overridden with the \-\-encoding command\-line option.
.TP
.B HGENCODINGMODE
.
This sets Mercurial\(aqs behavior for handling unknown characters
while transcoding user input. The default is "strict", which
causes Mercurial to abort if it can\(aqt map a character. Other
settings include "replace", which replaces unknown characters, and
"ignore", which drops them. This setting can be overridden with
the \-\-encodingmode command\-line option.
.TP
.B HGMERGE
.
An executable to use for resolving merge conflicts. The program
will be executed with three arguments: local file, remote file,
ancestor file.
.sp
(deprecated, use .hgrc)
.TP
.B HGRCPATH
.
A list of files or directories to search for hgrc files. Item
separator is ":" on Unix, ";" on Windows. If HGRCPATH is not set,
platform default search path is used. If empty, only the .hg/hgrc
from the current repository is read.
.sp
For each element in HGRCPATH:
.INDENT 7.0
.IP \(bu 2
.
if it\(aqs a directory, all files ending with .rc are added
.IP \(bu 2
.
otherwise, the file itself will be added
.UNINDENT
.TP
.B HGPLAIN
.
When set, this disables any options in .hgrc that might change
Mercurial\(aqs default output. This includes encoding, defaults,
verbose mode, debug mode, quiet mode, tracebacks, and
localization. This can be useful when scripting against Mercurial
in the face of existing user configuration.
.sp
Equivalent options set via command line flags or environment
variables are not overridden.
.TP
.B HGUSER
.
This is the string used as the author of a commit. If not set,
available values will be considered in this order:
.INDENT 7.0
.IP \(bu 2
.
HGUSER (deprecated)
.IP \(bu 2
.
hgrc files from the HGRCPATH
.IP \(bu 2
.
EMAIL
.IP \(bu 2
.
interactive prompt
.IP \(bu 2
.
LOGNAME (with \fB@hostname\fP appended)
.UNINDENT
.sp
(deprecated, use .hgrc)
.TP
.B EMAIL
.
May be used as the author of a commit; see HGUSER.
.TP
.B LOGNAME
.
May be used as the author of a commit; see HGUSER.
.TP
.B VISUAL
.
This is the name of the editor to use when committing. See EDITOR.
.TP
.B EDITOR
.
Sometimes Mercurial needs to open a text file in an editor for a
user to modify, for example when writing commit messages. The
editor it uses is determined by looking at the environment
variables HGEDITOR, VISUAL and EDITOR, in that order. The first
non\-empty one is chosen. If all of them are empty, the editor
defaults to \(aqvi\(aq.
.TP
.B PYTHONPATH
.
This is used by Python to find imported modules and may need to be
set appropriately if this Mercurial is not installed system\-wide.
.UNINDENT
.SH SPECIFYING SINGLE REVISIONS
.sp
Mercurial supports several ways to specify individual revisions.
.sp
A plain integer is treated as a revision number. Negative integers are
treated as sequential offsets from the tip, with \-1 denoting the tip,
\-2 denoting the revision prior to the tip, and so forth.
.sp
A 40\-digit hexadecimal string is treated as a unique revision
identifier.
.sp
A hexadecimal string less than 40 characters long is treated as a
unique revision identifier and is referred to as a short\-form
identifier. A short\-form identifier is only valid if it is the prefix
of exactly one full\-length identifier.
.sp
Any other string is treated as a tag or branch name. A tag name is a
symbolic name associated with a revision identifier. A branch name
denotes the tipmost revision of that branch. Tag and branch names must
not contain the ":" character.
.sp
The reserved name "tip" is a special tag that always identifies the
most recent revision.
.sp
The reserved name "null" indicates the null revision. This is the
revision of an empty repository, and the parent of revision 0.
.sp
The reserved name "." indicates the working directory parent. If no
working directory is checked out, it is equivalent to null. If an
uncommitted merge is in progress, "." is the revision of the first
parent.
.SH SPECIFYING MULTIPLE REVISIONS
.sp
When Mercurial accepts more than one revision, they may be specified
individually, or provided as a topologically continuous range,
separated by the ":" character.
.sp
The syntax of range notation is [BEGIN]:[END], where BEGIN and END are
revision identifiers. Both BEGIN and END are optional. If BEGIN is not
specified, it defaults to revision number 0. If END is not specified,
it defaults to the tip. The range ":" thus means "all revisions".
.sp
If BEGIN is greater than END, revisions are treated in reverse order.
.sp
A range acts as a closed interval. This means that a range of 3:5
gives 3, 4 and 5. Similarly, a range of 9:6 gives 9, 8, 7, and 6.
.SH SPECIFYING REVISION SETS
.sp
Mercurial supports a functional language for selecting a set of
revisions.
.sp
The language supports a number of predicates which are joined by infix
operators. Parenthesis can be used for grouping.
.sp
Identifiers such as branch names must be quoted with single or double
quotes if they contain characters outside of
\fB[._a\-zA\-Z0\-9\ex80\-\exff]\fP or if they match one of the predefined
predicates. Special characters can be used in quoted identifiers by
escaping them, e.g., \fB\en\fP is interpreted as a newline.
.sp
There is a single prefix operator:
.INDENT 0.0
.TP
.B \fBnot x\fP
.sp
Changesets not in x. Short form is \fB! x\fP.
.UNINDENT
.sp
These are the supported infix operators:
.INDENT 0.0
.TP
.B \fBx::y\fP
.sp
A DAG range, meaning all changesets that are descendants of x and
ancestors of y, including x and y themselves. If the first endpoint
is left out, this is equivalent to \fBancestors(y)\fP, if the second
is left out it is equivalent to \fBdescendants(x)\fP.
.sp
An alternative syntax is \fBx..y\fP.
.TP
.B \fBx:y\fP
.sp
All changesets with revision numbers between x and y, both
inclusive. Either endpoint can be left out, they default to 0 and
tip.
.TP
.B \fBx and y\fP
.sp
The intersection of changesets in x and y. Short form is \fBx & y\fP.
.TP
.B \fBx or y\fP
.sp
The union of changesets in x and y. There are two alternative short
forms: \fBx | y\fP and \fBx + y\fP.
.TP
.B \fBx \- y\fP
.sp
Changesets in x but not in y.
.UNINDENT
.sp
The following predicates are supported:
.INDENT 0.0
.TP
.B \fBadds(pattern)\fP
.sp
Changesets that add a file matching pattern.
.TP
.B \fBall()\fP
.sp
All changesets, the same as \fB0:tip\fP.
.TP
.B \fBancestor(single, single)\fP
.sp
Greatest common ancestor of the two changesets.
.TP
.B \fBancestors(set)\fP
.sp
Changesets that are ancestors of a changeset in set.
.TP
.B \fBauthor(string)\fP
.sp
Alias for \fBuser(string)\fP.
.TP
.B \fBbranch(set)\fP
.sp
The branch names are found for changesets in set, and the result is
all changesets belonging to one those branches.
.TP
.B \fBchildren(set)\fP
.sp
Child changesets of changesets in set.
.TP
.B \fBclosed()\fP
.sp
Changeset is closed.
.TP
.B \fBcontains(pattern)\fP
.sp
Revision contains pattern.
.TP
.B \fBdate(interval)\fP
.sp
Changesets within the interval, see \%\fBhg help dates\fP\:.
.TP
.B \fBdescendants(set)\fP
.sp
Changesets which are decendants of changesets in set.
.TP
.B \fBfile(pattern)\fP
.sp
Changesets which manually affected files matching pattern.
.TP
.B \fBfollow()\fP
.sp
An alias for \fB::.\fP (ancestors of the working copy\(aqs first parent).
.TP
.B \fBgrep(regex)\fP
.sp
Like \fBkeyword(string)\fP but accepts a regex.
.TP
.B \fBhead()\fP
.sp
Changeset is a head.
.TP
.B \fBheads(set)\fP
.sp
Members of set with no children in set.
.TP
.B \fBkeyword(string)\fP
.sp
Search commit message, user name, and names of changed files for
string.
.TP
.B \fBlimit(set, n)\fP
.sp
First n members of set.
.TP
.B \fBmax(set)\fP
.sp
Changeset with highest revision number in set.
.TP
.B \fBmerge()\fP
.sp
Changeset is a merge changeset.
.TP
.B \fBmodifies(pattern)\fP
.sp
Changesets which modify files matching pattern.
.TP
.B \fBoutgoing([path])\fP
.sp
Changesets missing in path.
.TP
.B \fBp1(set)\fP
.sp
First parent of changesets in set.
.TP
.B \fBp2(set)\fP
.sp
Second parent of changesets in set.
.TP
.B \fBparents(set)\fP
.sp
The set of all parents for all changesets in set.
.TP
.B \fBremoves(pattern)\fP
.sp
Changesets which remove files matching pattern.
.TP
.B \fBreverse(set)\fP
.sp
Reverse order of set.
.TP
.B \fBroots(set)\fP
.sp
Changesets with no parent changeset in set.
.TP
.B \fBsort(set[, [\-]key...])\fP
.sp
Sort set by keys. The default sort order is ascending, specify a key
as \fB\-key\fP to sort in descending order.
.sp
The keys can be:
.INDENT 7.0
.IP \(bu 2
.
\fBrev\fP for the revision number,
.IP \(bu 2
.
\fBbranch\fP for the branch name,
.IP \(bu 2
.
\fBdesc\fP for the commit message (description),
.IP \(bu 2
.
\fBuser\fP for user name (\fBauthor\fP can be used as an alias),
.IP \(bu 2
.
\fBdate\fP for the commit date
.UNINDENT
.TP
.B \fBtagged()\fP
.sp
Changeset is tagged.
.TP
.B \fBuser(string)\fP
.sp
User name is string.
.UNINDENT
.sp
Command line equivalents for \%\fBhg log\fP\::
.sp
.nf
.ft C
\-f    \->  ::.
\-d x  \->  date(x)
\-k x  \->  keyword(x)
\-m    \->  merge()
\-u x  \->  user(x)
\-b x  \->  branch(x)
\-P x  \->  !::x
\-l x  \->  limit(expr, x)
.ft P
.fi
.sp
Some sample queries:
.sp
.nf
.ft C
hg log \-r \(aqbranch(default)\(aq
hg log \-r \(aqbranch(default) and 1.5:: and not merge()\(aq
hg log \-r \(aq1.3::1.5 and keyword(bug) and file("hgext/*")\(aq
hg log \-r \(aqsort(date("May 2008"), user)\(aq
hg log \-r \(aq(keyword(bug) or keyword(issue)) and not ancestors(tagged())\(aq
.ft P
.fi
.SH DIFF FORMATS
.sp
Mercurial\(aqs default format for showing changes between two versions of
a file is compatible with the unified format of GNU diff, which can be
used by GNU patch and many other standard tools.
.sp
While this standard format is often enough, it does not encode the
following information:
.INDENT 0.0
.IP \(bu 2
.
executable status and other permission bits
.IP \(bu 2
.
copy or rename information
.IP \(bu 2
.
changes in binary files
.IP \(bu 2
.
creation or deletion of empty files
.UNINDENT
.sp
Mercurial also supports the extended diff format from the git VCS
which addresses these limitations. The git diff format is not produced
by default because a few widespread tools still do not understand this
format.
.sp
This means that when generating diffs from a Mercurial repository
(e.g. with \%\fBhg export\fP\:), you should be careful about things like file
copies and renames or other things mentioned above, because when
applying a standard diff to a different repository, this extra
information is lost. Mercurial\(aqs internal operations (like push and
pull) are not affected by this, because they use an internal binary
format for communicating changes.
.sp
To make Mercurial produce the git extended diff format, use the \-\-git
option available for many commands, or set \(aqgit = True\(aq in the [diff]
section of your hgrc. You do not need to set this option when
importing diffs in this format or using them in the mq extension.
.SH TEMPLATE USAGE
.sp
Mercurial allows you to customize output of commands through
templates. You can either pass in a template from the command
line, via the \-\-template option, or select an existing
template\-style (\-\-style).
.sp
You can customize output for any "log\-like" command: log,
outgoing, incoming, tip, parents, heads and glog.
.sp
Four styles are packaged with Mercurial: default (the style used
when no explicit preference is passed), compact, changelog,
and xml.
Usage:
.sp
.nf
.ft C
$ hg log \-r1 \-\-style changelog
.ft P
.fi
.sp
A template is a piece of text, with markup to invoke variable
expansion:
.sp
.nf
.ft C
$ hg log \-r1 \-\-template "{node}\en"
b56ce7b07c52de7d5fd79fb89701ea538af65746
.ft P
.fi
.sp
Strings in curly braces are called keywords. The availability of
keywords depends on the exact context of the templater. These
keywords are usually available for templating a log\-like command:
.INDENT 0.0
.TP
.B author
.
String. The unmodified author of the changeset.
.TP
.B branches
.
String. The name of the branch on which the changeset was
committed. Will be empty if the branch name was default.
.TP
.B date
.
Date information. The date when the changeset was committed.
.TP
.B desc
.
String. The text of the changeset description.
.TP
.B diffstat
.
String. Statistics of changes with the following format:
"modified files: +added/\-removed lines"
.TP
.B files
.
List of strings. All files modified, added, or removed by this
changeset.
.TP
.B file_adds
.
List of strings. Files added by this changeset.
.TP
.B file_copies
.
List of strings. Files copied in this changeset with
their sources.
.TP
.B file_copies_switch
.
List of strings. Like "file_copies" but displayed
only if the \-\-copied switch is set.
.TP
.B file_mods
.
List of strings. Files modified by this changeset.
.TP
.B file_dels
.
List of strings. Files removed by this changeset.
.TP
.B node
.
String. The changeset identification hash, as a 40\-character
hexadecimal string.
.TP
.B parents
.
List of strings. The parents of the changeset.
.TP
.B rev
.
Integer. The repository\-local changeset revision number.
.TP
.B tags
.
List of strings. Any tags associated with the changeset.
.TP
.B latesttag
.
String. Most recent global tag in the ancestors of this
changeset.
.TP
.B latesttagdistance
.
Integer. Longest path to the latest tag.
.UNINDENT
.sp
The "date" keyword does not produce human\-readable output. If you
want to use a date in your output, you can use a filter to process
it. Filters are functions which return a string based on the input
variable. Be sure to use the stringify filter first when you\(aqre
applying a string\-input filter to a list\-like input variable.
You can also use a chain of filters to get the desired output:
.sp
.nf
.ft C
$ hg tip \-\-template "{date|isodate}\en"
2008\-08\-21 18:22 +0000
.ft P
.fi
.sp
List of filters:
.INDENT 0.0
.TP
.B addbreaks
.
Any text. Add an XHTML "<br />" tag before the end of
every line except the last.
.TP
.B age
.
Date. Returns a human\-readable date/time difference between the
given date/time and the current date/time.
.TP
.B basename
.
Any text. Treats the text as a path, and returns the last
component of the path after splitting by the path separator
(ignoring trailing separators). For example, "foo/bar/baz" becomes
"baz" and "foo/bar//" becomes "bar".
.TP
.B stripdir
.
Treat the text as path and strip a directory level, if
possible. For example, "foo" and "foo/bar" becomes "foo".
.TP
.B date
.
Date. Returns a date in a Unix date format, including the
timezone: "Mon Sep 04 15:13:13 2006 0700".
.TP
.B domain
.
Any text. Finds the first string that looks like an email
address, and extracts just the domain component. Example: \fBUser
<user@example.com>\fP becomes \fBexample.com\fP.
.TP
.B email
.
Any text. Extracts the first string that looks like an email
address. Example: \fBUser <user@example.com>\fP becomes
\fBuser@example.com\fP.
.TP
.B escape
.
Any text. Replaces the special XML/XHTML characters "&", "<"
and ">" with XML entities.
.TP
.B fill68
.
Any text. Wraps the text to fit in 68 columns.
.TP
.B fill76
.
Any text. Wraps the text to fit in 76 columns.
.TP
.B firstline
.
Any text. Returns the first line of text.
.TP
.B nonempty
.
Any text. Returns \(aq(none)\(aq if the string is empty.
.TP
.B hgdate
.
Date. Returns the date as a pair of numbers: "1157407993
25200" (Unix timestamp, timezone offset).
.TP
.B isodate
.
Date. Returns the date in ISO 8601 format: "2009\-08\-18 13:00
+0200".
.TP
.B isodatesec
.
Date. Returns the date in ISO 8601 format, including
seconds: "2009\-08\-18 13:00:13 +0200". See also the rfc3339date
filter.
.TP
.B localdate
.
Date. Converts a date to local date.
.TP
.B obfuscate
.
Any text. Returns the input text rendered as a sequence of
XML entities.
.TP
.B person
.
Any text. Returns the text before an email address.
.TP
.B rfc822date
.
Date. Returns a date using the same format used in email
headers: "Tue, 18 Aug 2009 13:00:13 +0200".
.TP
.B rfc3339date
.
Date. Returns a date using the Internet date format
specified in RFC 3339: "2009\-08\-18T13:00:13+02:00".
.TP
.B short
.
Changeset hash. Returns the short form of a changeset hash,
i.e. a 12\-byte hexadecimal string.
.TP
.B shortdate
.
Date. Returns a date like "2006\-09\-18".
.TP
.B strip
.
Any text. Strips all leading and trailing whitespace.
.TP
.B tabindent
.
Any text. Returns the text, with every line except the
first starting with a tab character.
.TP
.B urlescape
.
Any text. Escapes all "special" characters. For example,
"foo bar" becomes "foo%20bar".
.TP
.B user
.
Any text. Returns the user portion of an email address.
.UNINDENT
.SH URL PATHS
.sp
Valid URLs are of the form:
.sp
.nf
.ft C
local/filesystem/path[#revision]
file://local/filesystem/path[#revision]
http://[user[:pass]@]host[:port]/[path][#revision]
https://[user[:pass]@]host[:port]/[path][#revision]
ssh://[user[:pass]@]host[:port]/[path][#revision]
.ft P
.fi
.sp
Paths in the local filesystem can either point to Mercurial
repositories or to bundle files (as created by \%\fBhg bundle\fP\: or :hg:\(ga
incoming \-\-bundle\(ga).
.sp
An optional identifier after # indicates a particular branch, tag, or
changeset to use from the remote repository. See also \%\fBhg help
revisions\fP\:.
.sp
Some features, such as pushing to \%http://\: and \%https://\: URLs are only
possible if the feature is explicitly enabled on the remote Mercurial
server.
.sp
Some notes about using SSH with Mercurial:
.INDENT 0.0
.IP \(bu 2
.
SSH requires an accessible shell account on the destination machine
and a copy of hg in the remote path or specified with as remotecmd.
.IP \(bu 2
.
path is relative to the remote user\(aqs home directory by default. Use
an extra slash at the start of a path to specify an absolute path:
.sp
.nf
.ft C
ssh://example.com//tmp/repository
.ft P
.fi
.IP \(bu 2
.
Mercurial doesn\(aqt use its own compression via SSH; the right thing
to do is to configure it in your ~/.ssh/config, e.g.:
.sp
.nf
.ft C
Host *.mylocalnetwork.example.com
  Compression no
Host *
  Compression yes
.ft P
.fi
.sp
Alternatively specify "ssh \-C" as your ssh command in your hgrc or
with the \-\-ssh command line option.
.UNINDENT
.sp
These URLs can all be stored in your hgrc with path aliases under the
[paths] section like so:
.sp
.nf
.ft C
[paths]
alias1 = URL1
alias2 = URL2
\&...
.ft P
.fi
.sp
You can then use the alias for any command that uses a URL (for
example \%\fBhg pull alias1\fP\: will be treated as \%\fBhg pull URL1\fP\:).
.sp
Two path aliases are special because they are used as defaults when
you do not provide the URL to a command:
.INDENT 0.0
.TP
.B default:
.
When you create a repository with hg clone, the clone command saves
the location of the source repository as the new repository\(aqs
\(aqdefault\(aq path. This is then used when you omit path from push\- and
pull\-like commands (including incoming and outgoing).
.TP
.B default\-push:
.
The push command will look for a path named \(aqdefault\-push\(aq, and
prefer it over \(aqdefault\(aq if both are defined.
.UNINDENT
.SH USING ADDITIONAL FEATURES
.sp
Mercurial has the ability to add new features through the use of
extensions. Extensions may add new commands, add options to
existing commands, change the default behavior of commands, or
implement hooks.
.sp
Extensions are not loaded by default for a variety of reasons:
they can increase startup overhead; they may be meant for advanced
usage only; they may provide potentially dangerous abilities (such
as letting you destroy or modify history); they might not be ready
for prime time; or they may alter some usual behaviors of stock
Mercurial. It is thus up to the user to activate extensions as
needed.
.sp
To enable the "foo" extension, either shipped with Mercurial or in
the Python search path, create an entry for it in your hgrc, like
this:
.sp
.nf
.ft C
[extensions]
foo =
.ft P
.fi
.sp
You may also specify the full path to an extension:
.sp
.nf
.ft C
[extensions]
myfeature = ~/.hgext/myfeature.py
.ft P
.fi
.sp
To explicitly disable an extension enabled in an hgrc of broader
scope, prepend its path with !:
.sp
.nf
.ft C
[extensions]
# disabling extension bar residing in /path/to/extension/bar.py
bar = !/path/to/extension/bar.py
# ditto, but no path was supplied for extension baz
baz = !
.ft P
.fi
.sp
disabled extensions:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B acl
.
hooks for controlling repository access
.TP
.B bookmarks
.
track a line of development with movable markers
.TP
.B bugzilla
.
hooks for integrating with the Bugzilla bug tracker
.TP
.B children
.
command to display child changesets
.TP
.B churn
.
command to display statistics about repository history
.TP
.B color
.
colorize output from some commands
.TP
.B convert
.
import revisions from foreign VCS repositories into Mercurial
.TP
.B eol
.
automatically manage newlines in repository files
.TP
.B extdiff
.
command to allow external programs to compare revisions
.TP
.B fetch
.
pull, update and merge in one command
.TP
.B gpg
.
commands to sign and verify changesets
.TP
.B graphlog
.
command to view revision graphs from a shell
.TP
.B hgcia
.
hooks for integrating with the CIA.vc notification service
.TP
.B hgk
.
browse the repository in a graphical way
.TP
.B highlight
.
syntax highlighting for hgweb (requires Pygments)
.TP
.B inotify
.
accelerate status report using Linux\(aqs inotify service
.TP
.B interhg
.
expand expressions into changelog and summaries
.TP
.B keyword
.
expand keywords in tracked files
.TP
.B mq
.
manage a stack of patches
.TP
.B notify
.
hooks for sending email notifications at commit/push time
.TP
.B pager
.
browse command output with an external pager
.TP
.B parentrevspec
.
interpret suffixes to refer to ancestor revisions
.TP
.B patchbomb
.
command to send changesets as (a series of) patch emails
.TP
.B progress
.
show progress bars for some actions
.TP
.B purge
.
command to delete untracked files from the working directory
.TP
.B rebase
.
command to move sets of revisions to a different ancestor
.TP
.B record
.
commands to interactively select changes for commit/qrefresh
.TP
.B relink
.
recreates hardlinks between repository clones
.TP
.B schemes
.
extend schemes with shortcuts to repository swarms
.TP
.B share
.
share a common history between several working directories
.TP
.B transplant
.
command to transplant changesets from another branch
.TP
.B win32mbcs
.
allow the use of MBCS paths with problematic encodings
.TP
.B win32text
.
perform automatic newline conversion
.TP
.B zeroconf
.
discover and advertise repositories on the local network
.UNINDENT
.UNINDENT
.UNINDENT
.SH CONFIGURING HGWEB
.sp
Mercurial\(aqs internal web server, hgweb, can serve either a single
repository, or a collection of them. In the latter case, a special
configuration file can be used to specify the repository paths to use
and global web configuration options.
.sp
This file uses the same syntax as hgrc configuration files, but only
the following sections are recognized:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
.
web
.IP \(bu 2
.
paths
.IP \(bu 2
.
collections
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The \fBweb\fP section can specify all the settings described in the web
section of the hgrc documentation.
.sp
The \fBpaths\fP section provides mappings of physical repository
paths to virtual ones. For instance:
.sp
.nf
.ft C
[paths]
projects/a = /foo/bar
projects/b = /baz/quux
web/root = /real/root/*
/ = /real/root2/*
virtual/root2 = /real/root2/**
.ft P
.fi
.INDENT 0.0
.IP \(bu 2
.
The first two entries make two repositories in different directories
appear under the same directory in the web interface
.IP \(bu 2
.
The third entry maps every Mercurial repository found in \(aq/real/root\(aq
into \(aqweb/root\(aq. This format is preferred over the [collections] one,
since using absolute paths as configuration keys is not supported on every
platform (especially on Windows).
.IP \(bu 2
.
The fourth entry is a special case mapping all repositories in
\(aq/real/root2\(aq in the root of the virtual directory.
.IP \(bu 2
.
The fifth entry recursively finds all repositories under the real
root, and maps their relative paths under the virtual root.
.UNINDENT
.sp
The \fBcollections\fP section provides mappings of trees of physical
repositories paths to virtual ones, though the paths syntax is generally
preferred. For instance:
.sp
.nf
.ft C
[collections]
/foo = /foo
.ft P
.fi
.sp
Here, the left side will be stripped off all repositories found in the
right side. Thus \fB/foo/bar\fP and \fBfoo/quux/baz\fP will be listed as
\fBbar\fP and \fBquux/baz\fP respectively.
.SH GLOSSARY
.INDENT 0.0
.TP
.B Ancestor
.
Any changeset that can be reached by an unbroken chain of parent
changesets from a given changeset. More precisely, the ancestors
of a changeset can be defined by two properties: a parent of a
changeset is an ancestor, and a parent of an ancestor is an
ancestor. See also: \(aqDescendant\(aq.
.TP
.B Branch
.
(Noun) A child changeset that has been created from a parent that
is not a head. These are known as topological branches, see
\(aqBranch, topological\(aq. If a topological branch is named, it becomes
a named branch. If a topological branch is not named, it becomes
an anonymous branch. See \(aqBranch, anonymous\(aq and \(aqBranch, named\(aq.
.sp
Branches may be created when changes are pulled from or pushed to
a remote repository, since new heads may be created by these
operations. Note that the term branch can also be used informally
to describe a development process in which certain development is
done independently of other development.This is sometimes done
explicitly with a named branch, but it can also be done locally,
using bookmarks or clones and anonymous branches.
.sp
Example: "The experimental branch".
.sp
(Verb) The action of creating a child changeset which results in
its parent having more than one child.
.sp
Example: "I\(aqm going to branch at X".
.TP
.B Branch, anonymous
.
Every time a new child changeset is created from a parent that is not
a head and the name of the branch is not changed, a new anonymous
branch is created.
.TP
.B Branch, closed
.
A named branch whose branch heads have all been closed.
.TP
.B Branch, default
.
The branch assigned to a changeset when no name has previously been
assigned.
.TP
.B Branch head
.
See \(aqHead, branch\(aq.
.TP
.B Branch, named
.
A collection of changesets which have the same branch name. By
default, children of a changeset in a named branch belong to the
same named branch. A child can be explicitly assigned to a
different branch. See \%\fBhg help branch\fP\:, \%\fBhg help branches\fP\: and
\%\fBhg commit \-\-close\-branch\fP\: for more information on managing
branches.
.sp
Named branches can be thought of as a kind of namespace, dividing
the collection of changesets that comprise the repository into a
collection of disjoint subsets. A named branch is not necessarily
a topological branch. If a new named branch is created from the
head of another named branch, or the default branch, but no
further changesets are added to that previous branch, then that
previous branch will be a branch in name only.
.TP
.B Branch tip
.
See \(aqTip, branch\(aq.
.TP
.B Branch, topological
.
Every time a new child changeset is created from a parent that is
not a head, a new topological branch is created. If a topological
branch is named, it becomes a named branch. If a topological
branch is not named, it becomes an anonymous branch of the
current, possibly default, branch.
.TP
.B Changelog
.
A record of the changesets in the order in which they were added
to the repository. This includes details such as changeset id,
author, commit message, date, and list of changed files.
.TP
.B Changeset
.
A snapshot of the state of the repository used to record a change.
.TP
.B Changeset, child
.
The converse of parent changeset: if P is a parent of C, then C is
a child of P. There is no limit to the number of children that a
changeset may have.
.TP
.B Changeset id
.
A SHA\-1 hash that uniquely identifies a changeset. It may be
represented as either a "long" 40\-byte hexadecimal string, or a
"short" 12\-byte hexadecimal string.
.TP
.B Changeset, merge
.
A changeset with two parents. This occurs when a merge is
committed.
.TP
.B Changeset, parent
.
A revision upon which a child changeset is based. Specifically, a
parent changeset of a changeset C is a changeset whose node
immediately precedes C in the DAG. Changesets have at most two
parents.
.TP
.B Checkout
.
(Noun) The working directory being updated to a specific
revision. This use should probably be avoided where possible, as
changeset is much more appropriate than checkout in this context.
.sp
Example: "I\(aqm using checkout X."
.sp
(Verb) Updating the working directory to a specific changeset. See
\%\fBhg help update\fP\:.
.sp
Example: "I\(aqm going to check out changeset X."
.TP
.B Child changeset
.
See \(aqChangeset, child\(aq.
.TP
.B Close changeset
.
See \(aqChangeset, close\(aq.
.TP
.B Closed branch
.
See \(aqBranch, closed\(aq.
.TP
.B Clone
.
(Noun) An entire or partial copy of a repository. The partial
clone must be in the form of a revision and its ancestors.
.sp
Example: "Is your clone up to date?".
.sp
(Verb) The process of creating a clone, using \%\fBhg clone\fP\:.
.sp
Example: "I\(aqm going to clone the repository".
.TP
.B Closed branch head
.
See \(aqHead, closed branch\(aq.
.TP
.B Commit
.
(Noun) A synonym for changeset.
.sp
Example: "Is the bug fixed in your recent commit?"
.sp
(Verb) The act of recording changes to a repository. When files
are committed in a working directory, Mercurial finds the
differences between the committed files and their parent
changeset, creating a new changeset in the repository.
.sp
Example: "You should commit those changes now."
.TP
.B Cset
.
A common abbreviation of the term changeset.
.TP
.B DAG
.
The repository of changesets of a distributed version control
system (DVCS) can be described as a directed acyclic graph (DAG),
consisting of nodes and edges, where nodes correspond to
changesets and edges imply a parent \-> child relation. This graph
can be visualized by graphical tools such as \%\fBhg glog\fP\:
(graphlog). In Mercurial, the DAG is limited by the requirement
for children to have at most two parents.
.TP
.B Default branch
.
See \(aqBranch, default\(aq.
.TP
.B Descendant
.
Any changeset that can be reached by a chain of child changesets
from a given changeset. More precisely, the descendants of a
changeset can be defined by two properties: the child of a
changeset is a descendant, and the child of a descendant is a
descendant. See also: \(aqAncestor\(aq.
.TP
.B Diff
.
(Noun) The difference between the contents and attributes of files
in two changesets or a changeset and the current working
directory. The difference is usually represented in a standard
form called a "diff" or "patch". The "git diff" format is used
when the changes include copies, renames, or changes to file
attributes, none of which can be represented/handled by classic
"diff" and "patch".
.sp
Example: "Did you see my correction in the diff?"
.sp
(Verb) Diffing two changesets is the action of creating a diff or
patch.
.sp
Example: "If you diff with changeset X, you will see what I mean."
.TP
.B Directory, working
.
The working directory represents the state of the files tracked by
Mercurial, that will be recorded in the next commit. The working
directory initially corresponds to the snapshot at an existing
changeset, known as the parent of the working directory. See
\(aqParent, working directory\(aq. The state may be modified by changes
to the files introduced manually or by a merge. The repository
metadata exists in the .hg directory inside the working directory.
.TP
.B Graph
.
See DAG and \%\fBhg help graphlog\fP\:.
.TP
.B Head
.
The term \(aqhead\(aq may be used to refer to both a branch head or a
repository head, depending on the context. See \(aqHead, branch\(aq and
\(aqHead, repository\(aq for specific definitions.
.sp
Heads are where development generally takes place and are the
usual targets for update and merge operations.
.TP
.B Head, branch
.
A changeset with no descendants on the same named branch.
.TP
.B Head, closed branch
.
A changeset that marks a head as no longer interesting. The closed
head is no longer listed by \%\fBhg heads\fP\:. A branch is considered
closed when all its heads are closed and consequently is not
listed by \%\fBhg branches\fP\:.
.TP
.B Head, repository
.
A topological head which has not been closed.
.TP
.B Head, topological
.
A changeset with no children in the repository.
.TP
.B History, immutable
.
Once committed, changesets cannot be altered.  Extensions which
appear to change history actually create new changesets that
replace existing ones, and then destroy the old changesets. Doing
so in public repositories can result in old changesets being
reintroduced to the repository.
.TP
.B History, rewriting
.
The changesets in a repository are immutable. However, extensions
to Mercurial can be used to alter the repository, usually in such
a way as to preserve changeset contents.
.TP
.B Immutable history
.
See \(aqHistory, immutable\(aq.
.TP
.B Merge changeset
.
See \(aqChangeset, merge\(aq.
.TP
.B Manifest
.
Each changeset has a manifest, which is the list of files that are
tracked by the changeset.
.TP
.B Merge
.
Used to bring together divergent branches of work. When you update
to a changeset and then merge another changeset, you bring the
history of the latter changeset into your working directory. Once
conflicts are resolved (and marked), this merge may be committed
as a merge changeset, bringing two branches together in the DAG.
.TP
.B Named branch
.
See \(aqBranch, named\(aq.
.TP
.B Null changeset
.
The empty changeset. It is the parent state of newly\-initialized
repositories and repositories with no checked out revision. It is
thus the parent of root changesets and the effective ancestor when
merging unrelated changesets. Can be specified by the alias \(aqnull\(aq
or by the changeset ID \(aq000000000000\(aq.
.TP
.B Parent
.
See \(aqChangeset, parent\(aq.
.TP
.B Parent changeset
.
See \(aqChangeset, parent\(aq.
.TP
.B Parent, working directory
.
The working directory parent reflects a virtual revision which is
the child of the changeset (or two changesets with an uncommitted
merge) shown by \%\fBhg parents\fP\:. This is changed with
\%\fBhg update\fP\:. Other commands to see the working directory parent
are \%\fBhg summary\fP\: and \%\fBhg id\fP\:. Can be specified by the alias ".".
.TP
.B Patch
.
(Noun) The product of a diff operation.
.sp
Example: "I\(aqve sent you my patch."
.sp
(Verb) The process of using a patch file to transform one
changeset into another.
.sp
Example: "You will need to patch that revision."
.TP
.B Pull
.
An operation in which changesets in a remote repository which are
not in the local repository are brought into the local
repository. Note that this operation without special arguments
only updates the repository, it does not update the files in the
working directory. See \%\fBhg help pull\fP\:.
.TP
.B Push
.
An operation in which changesets in a local repository which are
not in a remote repository are sent to the remote repository. Note
that this operation only adds changesets which have been committed
locally to the remote repository. Uncommitted changes are not
sent. See \%\fBhg help push\fP\:.
.TP
.B Repository
.
The metadata describing all recorded states of a collection of
files. Each recorded state is represented by a changeset. A
repository is usually (but not always) found in the \fB.hg\fP
subdirectory of a working directory. Any recorded state can be
recreated by "updating" a working directory to a specific
changeset.
.TP
.B Repository head
.
See \(aqHead, repository\(aq.
.TP
.B Revision
.
A state of the repository at some point in time. Earlier revisions
can be updated to by using \%\fBhg update\fP\:.  See also \(aqRevision
number\(aq; See also \(aqChangeset\(aq.
.TP
.B Revision number
.
This integer uniquely identifies a changeset in a specific
repository. It represents the order in which changesets were added
to a repository, starting with revision number 0. Note that the
revision number may be different in each clone of a repository. To
identify changesets uniquely between different clones, see
\(aqChangeset id\(aq.
.TP
.B Revlog
.
History storage mechanism used by Mercurial. It is a form of delta
encoding, with occasional full revision of data followed by delta
of each successive revision. It includes data and an index
pointing to the data.
.TP
.B Rewriting history
.
See \(aqHistory, rewriting\(aq.
.TP
.B Root
.
A changeset that has only the null changeset as its parent. Most
repositories have only a single root changeset.
.TP
.B Tip
.
The changeset with the highest revision number. It is the changeset
most recently added in a repository.
.TP
.B Tip, branch
.
The head of a given branch with the highest revision number. When
a branch name is used as a revision identifier, it refers to the
branch tip. See also \(aqBranch, head\(aq. Note that because revision
numbers may be different in different repository clones, the
branch tip may be different in different cloned repositories.
.TP
.B Update
.
(Noun) Another synonym of changeset.
.sp
Example: "I\(aqve pushed an update".
.sp
(Verb) This term is usually used to describe updating the state of
the working directory to that of a specific changeset. See
\%\fBhg help update\fP\:.
.sp
Example: "You should update".
.TP
.B Working directory
.
See \(aqDirectory, working\(aq.
.TP
.B Working directory parent
.
See \(aqParent, working directory\(aq.
.UNINDENT
.SH FILES
.INDENT 0.0
.TP
.B \fB.hgignore\fP
.sp
This file contains regular expressions (one per line) that
describe file names that should be ignored by \fBhg\fP. For details,
see \%\fBhgignore\fP(5)\:.
.TP
.B \fB.hgtags\fP
.sp
This file contains changeset hash values and text tag names (one
of each separated by spaces) that correspond to tagged versions of
the repository contents.
.TP
.B \fB/etc/mercurial/hgrc\fP, \fB$HOME/.hgrc\fP, \fB.hg/hgrc\fP
.sp
This file contains defaults and configuration. Values in
\fB.hg/hgrc\fP override those in \fB$HOME/.hgrc\fP, and these override
settings made in the global \fB/etc/mercurial/hgrc\fP configuration.
See \%\fBhgrc\fP(5)\: for details of the contents and format of these
files.
.UNINDENT
.sp
Some commands (e.g. revert) produce backup files ending in \fB.orig\fP,
if the \fB.orig\fP file already exists and is not tracked by Mercurial,
it will be overwritten.
.SH BUGS
.sp
Probably lots, please post them to the mailing list (see \%Resources\:
below) when you find them.
.SH SEE ALSO
.sp
\%\fBhgignore\fP(5)\:, \%\fBhgrc\fP(5)\:
.SH AUTHOR
.sp
Written by Matt Mackall <\%mpm@selenic.com\:>
.SH RESOURCES
.sp
Main Web Site: \%http://mercurial.selenic.com/\:
.sp
Source code repository: \%http://selenic.com/hg\:
.sp
Mailing list: \%http://selenic.com/mailman/listinfo/mercurial\:
.SH COPYING
.sp
Copyright (C) 2005\-2010 Matt Mackall.
Free use of this software is granted under the terms of the GNU General
Public License version 2 or any later version.
.\" Common link and substitution definitions.
.
.SH AUTHOR
Matt Mackall <mpm@selenic.com>

Organization: Mercurial
.\" Generated by docutils manpage writer.
.\" 
.
