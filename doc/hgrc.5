.\" Man page generated from reStructeredText.
.
.TH HGRC 5 "" "" "Mercurial Manual"
.SH NAME
hgrc \- configuration files for Mercurial
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH Synopsis
.sp
The Mercurial system uses a set of configuration files to control
aspects of its behavior.
.SH Files
.sp
Mercurial reads configuration data from several files, if they exist.
The names of these files depend on the system on which Mercurial is
installed. \fC*.rc\fP files from a single directory are read in
alphabetical order, later ones overriding earlier ones. Where multiple
paths are given below, settings from earlier paths override later
ones.
.nf
(Unix, Windows) \fC<repo>/.hg/hgrc\fP
.fi
.sp
.INDENT 0.0
.INDENT 3.5
.sp
Per\-repository configuration options that only apply in a
particular repository. This file is not version\-controlled, and
will not get transferred during a "clone" operation. Options in
this file override options in all other configuration files. On
Unix, most of this file will be ignored if it doesn\(aqt belong to a
trusted user or to a trusted group. See the documentation for the
\fI\%trusted\fP section below for more details.
.UNINDENT
.UNINDENT
.nf
(Unix) \fC$HOME/.hgrc\fP
(Windows) \fC%USERPROFILE%\e.hgrc\fP
(Windows) \fC%USERPROFILE%\eMercurial.ini\fP
(Windows) \fC%HOME%\e.hgrc\fP
(Windows) \fC%HOME%\eMercurial.ini\fP
.fi
.sp
.INDENT 0.0
.INDENT 3.5
.sp
Per\-user configuration file(s), for the user running Mercurial. On
Windows 9x, \fC%HOME%\fP is replaced by \fC%APPDATA%\fP. Options in these
files apply to all Mercurial commands executed by this user in any
directory. Options in these files override per\-system and per\-installation
options.
.UNINDENT
.UNINDENT
.nf
(Unix) \fC/etc/mercurial/hgrc\fP
(Unix) \fC/etc/mercurial/hgrc.d/*.rc\fP
.fi
.sp
.INDENT 0.0
.INDENT 3.5
.sp
Per\-system configuration files, for the system on which Mercurial
is running. Options in these files apply to all Mercurial commands
executed by any user in any directory. Options in these files
override per\-installation options.
.UNINDENT
.UNINDENT
.nf
(Unix) \fC<install\-root>/etc/mercurial/hgrc\fP
(Unix) \fC<install\-root>/etc/mercurial/hgrc.d/*.rc\fP
.fi
.sp
.INDENT 0.0
.INDENT 3.5
.sp
Per\-installation configuration files, searched for in the
directory where Mercurial is installed. \fC<install\-root>\fP is the
parent directory of the \fBhg\fP executable (or symlink) being run. For
example, if installed in \fC/shared/tools/bin/hg\fP, Mercurial will look
in \fC/shared/tools/etc/mercurial/hgrc\fP. Options in these files apply
to all Mercurial commands executed by any user in any directory.
.UNINDENT
.UNINDENT
.nf
(Windows) \fC<install\-dir>\eMercurial.ini\fP
(Windows) \fC<install\-dir>\ehgrc.d\e*.rc\fP
(Windows) \fCHKEY_LOCAL_MACHINE\eSOFTWARE\eMercurial\fP
.fi
.sp
.INDENT 0.0
.INDENT 3.5
.sp
Per\-installation/system configuration files, for the system on
which Mercurial is running. Options in these files apply to all
Mercurial commands executed by any user in any directory. Registry
keys contain PATH\-like strings, every part of which must reference
a \fCMercurial.ini\fP file or be a directory where \fC*.rc\fP files will
be read.  Mercurial checks each of these locations in the specified
order until one or more configuration files are detected.  If the
pywin32 extensions are not installed, Mercurial will only look for
site\-wide configuration in \fCC:\eMercurial\eMercurial.ini\fP.
.UNINDENT
.UNINDENT
.SH Syntax
.sp
A configuration file consists of sections, led by a \fC[section]\fP header
and followed by \fCname = value\fP entries (sometimes called
\fCconfiguration keys\fP):
.sp
.nf
.ft C
[spam]
eggs=ham
green=
   eggs
.ft P
.fi
.sp
Each line contains one entry. If the lines that follow are indented,
they are treated as continuations of that entry. Leading whitespace is
removed from values. Empty lines are skipped. Lines beginning with
\fC#\fP or \fC;\fP are ignored and may be used to provide comments.
.sp
Configuration keys can be set multiple times, in which case mercurial
will use the value that was configured last. As an example:
.sp
.nf
.ft C
[spam]
eggs=large
ham=serrano
eggs=small
.ft P
.fi
.sp
This would set the configuration key named \fCeggs\fP to \fCsmall\fP.
.sp
It is also possible to define a section multiple times. A section can
be redefined on the same and/or on different hgrc files. For example:
.sp
.nf
.ft C
[foo]
eggs=large
ham=serrano
eggs=small

[bar]
eggs=ham
green=
   eggs

[foo]
ham=prosciutto
eggs=medium
bread=toasted
.ft P
.fi
.sp
This would set the \fCeggs\fP, \fCham\fP, and \fCbread\fP configuration keys
of the \fCfoo\fP section to \fCmedium\fP, \fCprosciutto\fP, and \fCtoasted\fP,
respectively. As you can see there only thing that matters is the last
value that was set for each of the configuration keys.
.sp
If a configuration key is set multiple times in different
configuration files the final value will depend on the order in which
the different configuration files are read, with settings from earlier
paths overriding later ones as described on the \fCFiles\fP section
above.
.sp
A line of the form \fC%include file\fP will include \fCfile\fP into the
current configuration file. The inclusion is recursive, which means
that included files can include other files. Filenames are relative to
the configuration file in which the \fC%include\fP directive is found.
Environment variables and \fC~user\fP constructs are expanded in
\fCfile\fP. This lets you do something like:
.sp
.nf
.ft C
%include ~/.hgrc.d/$HOST.rc
.ft P
.fi
.sp
to include a different configuration file on each computer you use.
.sp
A line with \fC%unset name\fP will remove \fCname\fP from the current
section, if it has been set previously.
.sp
The values are either free\-form text strings, lists of text strings,
or Boolean values. Boolean values can be set to true using any of "1",
"yes", "true", or "on" and to false using "0", "no", "false", or "off"
(all case insensitive).
.sp
List values are separated by whitespace or comma, except when values are
placed in double quotation marks:
.sp
.nf
.ft C
allow_read = "John Doe, PhD", brian, betty
.ft P
.fi
.sp
Quotation marks can be escaped by prefixing them with a backslash. Only
quotation marks at the beginning of a word is counted as a quotation
(e.g., \fCfoo"bar baz\fP is the list of \fCfoo"bar\fP and \fCbaz\fP).
.SH Sections
.sp
This section describes the different sections that may appear in a
Mercurial "hgrc" file, the purpose of each section, its possible keys,
and their possible values.
.SS \fCalias\fP
.sp
Defines command aliases.
Aliases allow you to define your own commands in terms of other
commands (or aliases), optionally including arguments.
.sp
Alias definitions consist of lines of the form:
.sp
.nf
.ft C
<alias> = <command> [<argument]...
.ft P
.fi
.sp
For example, this definition:
.sp
.nf
.ft C
latest = log \-\-limit 5
.ft P
.fi
.sp
creates a new command \fClatest\fP that shows only the five most recent
changesets. You can define subsequent aliases using earlier ones:
.sp
.nf
.ft C
stable5 = latest \-b stable
.ft P
.fi
.IP Note
.
It is possible to create aliases with the same names as
existing commands, which will then override the original
definitions. This is almost always a bad idea!
.RE
.SS \fCauth\fP
.sp
Authentication credentials for HTTP authentication. Each line has
the following format:
.sp
.nf
.ft C
<name>.<argument> = <value>
.ft P
.fi
.sp
where \fC<name>\fP is used to group arguments into authentication
entries. Example:
.sp
.nf
.ft C
foo.prefix = hg.intevation.org/mercurial
foo.username = foo
foo.password = bar
foo.schemes = http https

bar.prefix = secure.example.org
bar.key = path/to/file.key
bar.cert = path/to/file.cert
bar.schemes = https
.ft P
.fi
.sp
Supported arguments:
.INDENT 0.0
.TP
.B \fCprefix\fP
.sp
Either \fC*\fP or a URI prefix with or without the scheme part.
The authentication entry with the longest matching prefix is used
(where \fC*\fP matches everything and counts as a match of length
1). If the prefix doesn\(aqt include a scheme, the match is performed
against the URI with its scheme stripped as well, and the schemes
argument, q.v., is then subsequently consulted.
.TP
.B \fCusername\fP
.sp
Optional. Username to authenticate with. If not given, and the
remote site requires basic or digest authentication, the user
will be prompted for it.
.TP
.B \fCpassword\fP
.sp
Optional. Password to authenticate with. If not given, and the
remote site requires basic or digest authentication, the user
will be prompted for it.
.TP
.B \fCkey\fP
.sp
Optional. PEM encoded client certificate key file.
.TP
.B \fCcert\fP
.sp
Optional. PEM encoded client certificate chain file.
.TP
.B \fCschemes\fP
.sp
Optional. Space separated list of URI schemes to use this
authentication entry with. Only used if the prefix doesn\(aqt include
a scheme. Supported schemes are http and https. They will match
static\-http and static\-https respectively, as well.
Default: https.
.UNINDENT
.sp
If no suitable authentication entry is found, the user is prompted
for credentials as usual if required by the remote.
.SS \fCdecode/encode\fP
.sp
Filters for transforming files on checkout/checkin. This would
typically be used for newline processing or other
localization/canonicalization of files.
.sp
Filters consist of a filter pattern followed by a filter command.
Filter patterns are globs by default, rooted at the repository root.
For example, to match any file ending in \fC.txt\fP in the root
directory only, use the pattern \fC*.txt\fP. To match any file ending
in \fC.c\fP anywhere in the repository, use the pattern \fC**.c\fP.
For each file only the first matching filter applies.
.sp
The filter command can start with a specifier, either \fCpipe:\fP or
\fCtempfile:\fP. If no specifier is given, \fCpipe:\fP is used by default.
.sp
A \fCpipe:\fP command must accept data on stdin and return the transformed
data on stdout.
.sp
Pipe example:
.sp
.nf
.ft C
[encode]
# uncompress gzip files on checkin to improve delta compression
# note: not necessarily a good idea, just an example
*.gz = pipe: gunzip

[decode]
# recompress gzip files when writing them to the working dir (we
# can safely omit "pipe:", because it\(aqs the default)
*.gz = gzip
.ft P
.fi
.sp
A \fCtempfile:\fP command is a template. The string \fCINFILE\fP is replaced
with the name of a temporary file that contains the data to be
filtered by the command. The string \fCOUTFILE\fP is replaced with the name
of an empty temporary file, where the filtered data must be written by
the command.
.IP Note
.
The tempfile mechanism is recommended for Windows systems,
where the standard shell I/O redirection operators often have
strange effects and may corrupt the contents of your files.
.RE
.sp
This filter mechanism is used internally by the \fCeol\fP extension to
translate line ending characters between Windows (CRLF) and Unix (LF)
format. We suggest you use the \fCeol\fP extension for convenience.
.SS \fCdefaults\fP
.sp
(defaults are deprecated. Don\(aqt use them. Use aliases instead)
.sp
Use the \fC[defaults]\fP section to define command defaults, i.e. the
default options/arguments to pass to the specified commands.
.sp
The following example makes \fI\%\fChg log\fP\fP run in verbose mode, and \fI\%\fChg hg
status\fP\fP show only the modified files, by default:
.sp
.nf
.ft C
[defaults]
log = \-v
status = \-m
.ft P
.fi
.sp
The actual commands, instead of their aliases, must be used when
defining command defaults. The command defaults will also be applied
to the aliases of the commands defined.
.SS \fCdiff\fP
.sp
Settings used when displaying diffs. They are all Boolean and
defaults to False.
.INDENT 0.0
.TP
.B \fCgit\fP
.sp
Use git extended diff format.
.TP
.B \fCnodates\fP
.sp
Don\(aqt include dates in diff headers.
.TP
.B \fCshowfunc\fP
.sp
Show which function each change is in.
.TP
.B \fCignorews\fP
.sp
Ignore white space when comparing lines.
.TP
.B \fCignorewsamount\fP
.sp
Ignore changes in the amount of white space.
.TP
.B \fCignoreblanklines\fP
.sp
Ignore changes whose lines are all blank.
.UNINDENT
.SS \fCemail\fP
.sp
Settings for extensions that send email messages.
.INDENT 0.0
.TP
.B \fCfrom\fP
.sp
Optional. Email address to use in "From" header and SMTP envelope
of outgoing messages.
.TP
.B \fCto\fP
.sp
Optional. Comma\-separated list of recipients\(aq email addresses.
.TP
.B \fCcc\fP
.sp
Optional. Comma\-separated list of carbon copy recipients\(aq
email addresses.
.TP
.B \fCbcc\fP
.sp
Optional. Comma\-separated list of blind carbon copy recipients\(aq
email addresses.
.TP
.B \fCmethod\fP
.sp
Optional. Method to use to send email messages. If value is \fCsmtp\fP
(default), use SMTP (see the \fI\%SMTP\fP section for configuration).
Otherwise, use as name of program to run that acts like sendmail
(takes \fC\-f\fP option for sender, list of recipients on command line,
message on stdin). Normally, setting this to \fCsendmail\fP or
\fC/usr/sbin/sendmail\fP is enough to use sendmail to send messages.
.TP
.B \fCcharsets\fP
.sp
Optional. Comma\-separated list of character sets considered
convenient for recipients. Addresses, headers, and parts not
containing patches of outgoing messages will be encoded in the
first character set to which conversion from local encoding
(\fC$HGENCODING\fP, \fCui.fallbackencoding\fP) succeeds. If correct
conversion fails, the text in question is sent as is. Defaults to
empty (explicit) list.
.sp
Order of outgoing email character sets:
.INDENT 7.0
.IP 1. 3
.
\fCus\-ascii\fP: always first, regardless of settings
.IP 2. 3
.
\fCemail.charsets\fP: in order given by user
.IP 3. 3
.
\fCui.fallbackencoding\fP: if not in email.charsets
.IP 4. 3
.
\fC$HGENCODING\fP: if not in email.charsets
.IP 5. 3
.
\fCutf\-8\fP: always last, regardless of settings
.UNINDENT
.UNINDENT
.sp
Email example:
.sp
.nf
.ft C
[email]
from = Joseph User <joe.user@example.com>
method = /usr/sbin/sendmail
# charsets for western Europeans
# us\-ascii, utf\-8 omitted, as they are tried first and last
charsets = iso\-8859\-1, iso\-8859\-15, windows\-1252
.ft P
.fi
.SS \fCextensions\fP
.sp
Mercurial has an extension mechanism for adding new features. To
enable an extension, create an entry for it in this section.
.sp
If you know that the extension is already in Python\(aqs search path,
you can give the name of the module, followed by \fC=\fP, with nothing
after the \fC=\fP.
.sp
Otherwise, give a name that you choose, followed by \fC=\fP, followed by
the path to the \fC.py\fP file (including the file name extension) that
defines the extension.
.sp
To explicitly disable an extension that is enabled in an hgrc of
broader scope, prepend its path with \fC!\fP, as in
\fChgext.foo = !/ext/path\fP or \fChgext.foo = !\fP  when path is not
supplied.
.sp
Example for \fC~/.hgrc\fP:
.sp
.nf
.ft C
[extensions]
# (the mq extension will get loaded from Mercurial\(aqs path)
hgext.mq =
# (this extension will get loaded from the file specified)
myfeature = ~/.hgext/myfeature.py
.ft P
.fi
.SS \fCformat\fP
.INDENT 0.0
.TP
.B \fCusestore\fP
.sp
Enable or disable the "store" repository format which improves
compatibility with systems that fold case or otherwise mangle
filenames. Enabled by default. Disabling this option will allow
you to store longer filenames in some situations at the expense of
compatibility and ensures that the on\-disk format of newly created
repositories will be compatible with Mercurial before version 0.9.4.
.TP
.B \fCusefncache\fP
.sp
Enable or disable the "fncache" repository format which enhances
the "store" repository format (which has to be enabled to use
fncache) to allow longer filenames and avoids using Windows
reserved names, e.g. "nul". Enabled by default. Disabling this
option ensures that the on\-disk format of newly created
repositories will be compatible with Mercurial before version 1.1.
.UNINDENT
.SS \fCmerge\-patterns\fP
.sp
This section specifies merge tools to associate with particular file
patterns. Tools matched here will take precedence over the default
merge tool. Patterns are globs by default, rooted at the repository
root.
.sp
Example:
.sp
.nf
.ft C
[merge\-patterns]
**.c = kdiff3
**.jpg = myimgmerge
.ft P
.fi
.SS \fCmerge\-tools\fP
.sp
This section configures external merge tools to use for file\-level
merges.
.sp
Example \fC~/.hgrc\fP:
.sp
.nf
.ft C
[merge\-tools]
# Override stock tool location
kdiff3.executable = ~/bin/kdiff3
# Specify command line
kdiff3.args = $base $local $other \-o $output
# Give higher priority
kdiff3.priority = 1

# Define new tool
myHtmlTool.args = \-m $local $other $base $output
myHtmlTool.regkey = Software\eFooSoftware\eHtmlMerge
myHtmlTool.priority = 1
.ft P
.fi
.sp
Supported arguments:
.INDENT 0.0
.TP
.B \fCpriority\fP
.sp
The priority in which to evaluate this tool.
Default: 0.
.TP
.B \fCexecutable\fP
.sp
Either just the name of the executable or its pathname.  On Windows,
the path can use environment variables with ${ProgramFiles} syntax.
Default: the tool name.
.TP
.B \fCargs\fP
.sp
The arguments to pass to the tool executable. You can refer to the
files being merged as well as the output file through these
variables: \fC$base\fP, \fC$local\fP, \fC$other\fP, \fC$output\fP.
Default: \fC$local $base $other\fP
.TP
.B \fCpremerge\fP
.sp
Attempt to run internal non\-interactive 3\-way merge tool before
launching external tool.  Options are \fCtrue\fP, \fCfalse\fP, or \fCkeep\fP
to leave markers in the file if the premerge fails.
Default: True
.TP
.B \fCbinary\fP
.sp
This tool can merge binary files. Defaults to False, unless tool
was selected by file pattern match.
.TP
.B \fCsymlink\fP
.sp
This tool can merge symlinks. Defaults to False, even if tool was
selected by file pattern match.
.TP
.B \fCcheck\fP
.sp
A list of merge success\-checking options:
.INDENT 7.0
.TP
.B \fCchanged\fP
.sp
Ask whether merge was successful when the merged file shows no changes.
.TP
.B \fCconflicts\fP
.sp
Check whether there are conflicts even though the tool reported success.
.TP
.B \fCprompt\fP
.sp
Always prompt for merge success, regardless of success reported by tool.
.UNINDENT
.TP
.B \fCcheckchanged\fP
.sp
True is equivalent to \fCcheck = changed\fP.
Default: False
.TP
.B \fCcheckconflicts\fP
.sp
True is equivalent to \fCcheck = conflicts\fP.
Default: False
.TP
.B \fCfixeol\fP
.sp
Attempt to fix up EOL changes caused by the merge tool.
Default: False
.TP
.B \fCgui\fP
.sp
This tool requires a graphical interface to run. Default: False
.TP
.B \fCregkey\fP
.sp
Windows registry key which describes install location of this
tool. Mercurial will search for this key first under
\fCHKEY_CURRENT_USER\fP and then under \fCHKEY_LOCAL_MACHINE\fP.
Default: None
.TP
.B \fCregname\fP
.sp
Name of value to read from specified registry key. Defaults to the
unnamed (default) value.
.TP
.B \fCregappend\fP
.sp
String to append to the value read from the registry, typically
the executable name of the tool.
Default: None
.UNINDENT
.SS \fChooks\fP
.sp
Commands or Python functions that get automatically executed by
various actions such as starting or finishing a commit. Multiple
hooks can be run for the same action by appending a suffix to the
action. Overriding a site\-wide hook can be done by changing its
value or setting it to an empty string.
.sp
Example \fC.hg/hgrc\fP:
.sp
.nf
.ft C
[hooks]
# update working directory after adding changesets
changegroup.update = hg update
# do not use the site\-wide hook
incoming =
incoming.email = /my/email/hook
incoming.autobuild = /my/build/hook
.ft P
.fi
.sp
Most hooks are run with environment variables set that give useful
additional information. For each hook below, the environment
variables it is passed are listed with names of the form \fC$HG_foo\fP.
.INDENT 0.0
.TP
.B \fCchangegroup\fP
.sp
Run after a changegroup has been added via push, pull or unbundle.
ID of the first new changeset is in \fC$HG_NODE\fP. URL from which
changes came is in \fC$HG_URL\fP.
.TP
.B \fCcommit\fP
.sp
Run after a changeset has been created in the local repository. ID
of the newly created changeset is in \fC$HG_NODE\fP. Parent changeset
IDs are in \fC$HG_PARENT1\fP and \fC$HG_PARENT2\fP.
.TP
.B \fCincoming\fP
.sp
Run after a changeset has been pulled, pushed, or unbundled into
the local repository. The ID of the newly arrived changeset is in
\fC$HG_NODE\fP. URL that was source of changes came is in \fC$HG_URL\fP.
.TP
.B \fCoutgoing\fP
.sp
Run after sending changes from local repository to another. ID of
first changeset sent is in \fC$HG_NODE\fP. Source of operation is in
\fC$HG_SOURCE\fP; see "preoutgoing" hook for description.
.TP
.B \fCpost\-<command>\fP
.sp
Run after successful invocations of the associated command. The
contents of the command line are passed as \fC$HG_ARGS\fP and the result
code in \fC$HG_RESULT\fP. Parsed command line arguments are passed as
\fC$HG_PATS\fP and \fC$HG_OPTS\fP. These contain string representations of
the python data internally passed to <command>. \fC$HG_OPTS\fP is a
dictionary of options (with unspecified options set to their defaults).
\fC$HG_PATS\fP is a list of arguments. Hook failure is ignored.
.TP
.B \fCpre\-<command>\fP
.sp
Run before executing the associated command. The contents of the
command line are passed as \fC$HG_ARGS\fP. Parsed command line arguments
are passed as \fC$HG_PATS\fP and \fC$HG_OPTS\fP. These contain string
representations of the data internally passed to <command>. \fC$HG_OPTS\fP
is a  dictionary of options (with unspecified options set to their
defaults). \fC$HG_PATS\fP is a list of arguments. If the hook returns
failure, the command doesn\(aqt execute and Mercurial returns the failure
code.
.TP
.B \fCprechangegroup\fP
.sp
Run before a changegroup is added via push, pull or unbundle. Exit
status 0 allows the changegroup to proceed. Non\-zero status will
cause the push, pull or unbundle to fail. URL from which changes
will come is in \fC$HG_URL\fP.
.TP
.B \fCprecommit\fP
.sp
Run before starting a local commit. Exit status 0 allows the
commit to proceed. Non\-zero status will cause the commit to fail.
Parent changeset IDs are in \fC$HG_PARENT1\fP and \fC$HG_PARENT2\fP.
.TP
.B \fCpreoutgoing\fP
.sp
Run before collecting changes to send from the local repository to
another. Non\-zero status will cause failure. This lets you prevent
pull over HTTP or SSH. Also prevents against local pull, push
(outbound) or bundle commands, but not effective, since you can
just copy files instead then. Source of operation is in
\fC$HG_SOURCE\fP. If "serve", operation is happening on behalf of remote
SSH or HTTP repository. If "push", "pull" or "bundle", operation
is happening on behalf of repository on same system.
.TP
.B \fCpretag\fP
.sp
Run before creating a tag. Exit status 0 allows the tag to be
created. Non\-zero status will cause the tag to fail. ID of
changeset to tag is in \fC$HG_NODE\fP. Name of tag is in \fC$HG_TAG\fP. Tag is
local if \fC$HG_LOCAL=1\fP, in repository if \fC$HG_LOCAL=0\fP.
.TP
.B \fCpretxnchangegroup\fP
.sp
Run after a changegroup has been added via push, pull or unbundle,
but before the transaction has been committed. Changegroup is
visible to hook program. This lets you validate incoming changes
before accepting them. Passed the ID of the first new changeset in
\fC$HG_NODE\fP. Exit status 0 allows the transaction to commit. Non\-zero
status will cause the transaction to be rolled back and the push,
pull or unbundle will fail. URL that was source of changes is in
\fC$HG_URL\fP.
.TP
.B \fCpretxncommit\fP
.sp
Run after a changeset has been created but the transaction not yet
committed. Changeset is visible to hook program. This lets you
validate commit message and changes. Exit status 0 allows the
commit to proceed. Non\-zero status will cause the transaction to
be rolled back. ID of changeset is in \fC$HG_NODE\fP. Parent changeset
IDs are in \fC$HG_PARENT1\fP and \fC$HG_PARENT2\fP.
.TP
.B \fCpreupdate\fP
.sp
Run before updating the working directory. Exit status 0 allows
the update to proceed. Non\-zero status will prevent the update.
Changeset ID of first new parent is in \fC$HG_PARENT1\fP. If merge, ID
of second new parent is in \fC$HG_PARENT2\fP.
.TP
.B \fCtag\fP
.sp
Run after a tag is created. ID of tagged changeset is in \fC$HG_NODE\fP.
Name of tag is in \fC$HG_TAG\fP. Tag is local if \fC$HG_LOCAL=1\fP, in
repository if \fC$HG_LOCAL=0\fP.
.TP
.B \fCupdate\fP
.sp
Run after updating the working directory. Changeset ID of first
new parent is in \fC$HG_PARENT1\fP. If merge, ID of second new parent is
in \fC$HG_PARENT2\fP. If the update succeeded, \fC$HG_ERROR=0\fP. If the
update failed (e.g. because conflicts not resolved), \fC$HG_ERROR=1\fP.
.UNINDENT
.IP Note
.
It is generally better to use standard hooks rather than the
generic pre\- and post\- command hooks as they are guaranteed to be
called in the appropriate contexts for influencing transactions.
Also, hooks like "commit" will be called in all contexts that
generate a commit (e.g. tag) and not just the commit command.
.RE
.IP Note
.
Environment variables with empty values may not be passed to
hooks on platforms such as Windows. As an example, \fC$HG_PARENT2\fP
will have an empty value under Unix\-like platforms for non\-merge
changesets, while it will not be available at all under Windows.
.RE
.sp
The syntax for Python hooks is as follows:
.sp
.nf
.ft C
hookname = python:modulename.submodule.callable
hookname = python:/path/to/python/module.py:callable
.ft P
.fi
.sp
Python hooks are run within the Mercurial process. Each hook is
called with at least three keyword arguments: a ui object (keyword
\fCui\fP), a repository object (keyword \fCrepo\fP), and a \fChooktype\fP
keyword that tells what kind of hook is used. Arguments listed as
environment variables above are passed as keyword arguments, with no
\fCHG_\fP prefix, and names in lower case.
.sp
If a Python hook returns a "true" value or raises an exception, this
is treated as a failure.
.SS \fChttp_proxy\fP
.sp
Used to access web\-based Mercurial repositories through a HTTP
proxy.
.INDENT 0.0
.TP
.B \fChost\fP
.sp
Host name and (optional) port of the proxy server, for example
"myproxy:8000".
.TP
.B \fCno\fP
.sp
Optional. Comma\-separated list of host names that should bypass
the proxy.
.TP
.B \fCpasswd\fP
.sp
Optional. Password to authenticate with at the proxy server.
.TP
.B \fCuser\fP
.sp
Optional. User name to authenticate with at the proxy server.
.TP
.B \fCalways\fP
.sp
Optional. Always use the proxy, even for localhost and any entries
in \fChttp_proxy.no\fP. True or False. Default: False.
.UNINDENT
.SS \fCsmtp\fP
.sp
Configuration for extensions that need to send email messages.
.INDENT 0.0
.TP
.B \fChost\fP
.sp
Host name of mail server, e.g. "mail.example.com".
.TP
.B \fCport\fP
.sp
Optional. Port to connect to on mail server. Default: 25.
.TP
.B \fCtls\fP
.sp
Optional. Whether to connect to mail server using TLS. True or
False. Default: False.
.TP
.B \fCusername\fP
.sp
Optional. User name to authenticate to SMTP server with. If
username is specified, password must also be specified.
Default: none.
.TP
.B \fCpassword\fP
.sp
Optional. Password to authenticate to SMTP server with. If
username is specified, password must also be specified.
Default: none.
.TP
.B \fClocal_hostname\fP
.sp
Optional. It\(aqs the hostname that the sender can use to identify
itself to the MTA.
.UNINDENT
.SS \fCpatch\fP
.sp
Settings used when applying patches, for instance through the \(aqimport\(aq
command or with Mercurial Queues extension.
.INDENT 0.0
.TP
.B \fCeol\fP
.sp
When set to \(aqstrict\(aq patch content and patched files end of lines
are preserved. When set to \fClf\fP or \fCcrlf\fP, both files end of
lines are ignored when patching and the result line endings are
normalized to either LF (Unix) or CRLF (Windows). When set to
\fCauto\fP, end of lines are again ignored while patching but line
endings in patched files are normalized to their original setting
on a per\-file basis. If target file does not exist or has no end
of line, patch line endings are preserved.
Default: strict.
.UNINDENT
.SS \fCpaths\fP
.sp
Assigns symbolic names to repositories. The left side is the
symbolic name, and the right gives the directory or URL that is the
location of the repository. Default paths can be declared by setting
the following entries.
.INDENT 0.0
.TP
.B \fCdefault\fP
.sp
Directory or URL to use when pulling if no source is specified.
Default is set to repository from which the current repository was
cloned.
.TP
.B \fCdefault\-push\fP
.sp
Optional. Directory or URL to use when pushing if no destination
is specified.
.UNINDENT
.SS \fCprofiling\fP
.sp
Specifies profiling format and file output. In this section
description, \(aqprofiling data\(aq stands for the raw data collected
during profiling, while \(aqprofiling report\(aq stands for a statistical
text report generated from the profiling data. The profiling is done
using lsprof.
.INDENT 0.0
.TP
.B \fCformat\fP
.sp
Profiling format.
Default: text.
.INDENT 7.0
.TP
.B \fCtext\fP
.sp
Generate a profiling report. When saving to a file, it should be
noted that only the report is saved, and the profiling data is
not kept.
.TP
.B \fCkcachegrind\fP
.sp
Format profiling data for kcachegrind use: when saving to a
file, the generated file can directly be loaded into
kcachegrind.
.UNINDENT
.TP
.B \fCoutput\fP
.sp
File path where profiling data or report should be saved. If the
file exists, it is replaced. Default: None, data is printed on
stderr
.UNINDENT
.SS \fCserver\fP
.sp
Controls generic server settings.
.INDENT 0.0
.TP
.B \fCuncompressed\fP
.sp
Whether to allow clients to clone a repository using the
uncompressed streaming protocol. This transfers about 40% more
data than a regular clone, but uses less memory and CPU on both
server and client. Over a LAN (100 Mbps or better) or a very fast
WAN, an uncompressed streaming clone is a lot faster (~10x) than a
regular clone. Over most WAN connections (anything slower than
about 6 Mbps), uncompressed streaming is slower, because of the
extra data transfer overhead. This mode will also temporarily hold
the write lock while determining what data to transfer.
Default is True.
.TP
.B \fCvalidate\fP
.sp
Whether to validate the completeness of pushed changesets by
checking that all new file revisions specified in manifests are
present. Default is False.
.UNINDENT
.SS \fCtrusted\fP
.sp
Mercurial will not use the settings in the
\fC.hg/hgrc\fP file from a repository if it doesn\(aqt belong to a trusted
user or to a trusted group, as various hgrc features allow arbitrary
commands to be run. This issue is often encountered when configuring
hooks or extensions for shared repositories or servers. However,
the web interface will use some safe settings from the \fC[web]\fP
section.
.sp
This section specifies what users and groups are trusted. The
current user is always trusted. To trust everybody, list a user or a
group with name \fC*\fP. These settings must be placed in an
\fIalready\-trusted file\fP to take effect, such as \fC$HOME/.hgrc\fP of the
user or service running Mercurial.
.INDENT 0.0
.TP
.B \fCusers\fP
.sp
Comma\-separated list of trusted users.
.TP
.B \fCgroups\fP
.sp
Comma\-separated list of trusted groups.
.UNINDENT
.SS \fCui\fP
.sp
User interface controls.
.INDENT 0.0
.TP
.B \fCarchivemeta\fP
.sp
Whether to include the .hg_archival.txt file containing meta data
(hashes for the repository base and for tip) in archives created
by the \fI\%\fChg archive\fP\fP command or downloaded via hgweb.
Default is True.
.TP
.B \fCaskusername\fP
.sp
Whether to prompt for a username when committing. If True, and
neither \fC$HGUSER\fP nor \fC$EMAIL\fP has been specified, then the user will
be prompted to enter a username. If no username is entered, the
default \fCUSER@HOST\fP is used instead.
Default is False.
.TP
.B \fCdebug\fP
.sp
Print debugging information. True or False. Default is False.
.TP
.B \fCeditor\fP
.sp
The editor to use during a commit. Default is \fC$EDITOR\fP or \fCvi\fP.
.TP
.B \fCfallbackencoding\fP
.sp
Encoding to try if it\(aqs not possible to decode the changelog using
UTF\-8. Default is ISO\-8859\-1.
.TP
.B \fCignore\fP
.sp
A file to read per\-user ignore patterns from. This file should be
in the same format as a repository\-wide .hgignore file. This
option supports hook syntax, so if you want to specify multiple
ignore files, you can do so by setting something like
\fCignore.other = ~/.hgignore2\fP. For details of the ignore file
format, see the \fI\%\fBhgignore\fP(5)\fP man page.
.TP
.B \fCinteractive\fP
.sp
Allow to prompt the user. True or False. Default is True.
.TP
.B \fClogtemplate\fP
.sp
Template string for commands that print changesets.
.TP
.B \fCmerge\fP
.sp
The conflict resolution program to use during a manual merge.
There are some internal tools available:
.INDENT 7.0
.TP
.B \fCinternal:local\fP
.sp
keep the local version
.TP
.B \fCinternal:other\fP
.sp
use the other version
.TP
.B \fCinternal:merge\fP
.sp
use the internal non\-interactive merge tool
.TP
.B \fCinternal:fail\fP
.sp
fail to merge
.UNINDENT
.UNINDENT
.sp
For more information on configuring merge tools see the
\fI\%merge\-tools\fP section.
.INDENT 0.0
.TP
.B \fCpatch\fP
.sp
command to use to apply patches. Look for \fCgpatch\fP or \fCpatch\fP in
PATH if unset.
.TP
.B \fCquiet\fP
.sp
Reduce the amount of output printed. True or False. Default is False.
.TP
.B \fCremotecmd\fP
.sp
remote command to use for clone/push/pull operations. Default is \fChg\fP.
.TP
.B \fCreport_untrusted\fP
.sp
Warn if a \fC.hg/hgrc\fP file is ignored due to not being owned by a
trusted user or group. True or False. Default is True.
.TP
.B \fCslash\fP
.sp
Display paths using a slash (\fC/\fP) as the path separator. This
only makes a difference on systems where the default path
separator is not the slash character (e.g. Windows uses the
backslash character (\fC\e\fP)).
Default is False.
.TP
.B \fCssh\fP
.sp
command to use for SSH connections. Default is \fCssh\fP.
.TP
.B \fCstrict\fP
.sp
Require exact command names, instead of allowing unambiguous
abbreviations. True or False. Default is False.
.TP
.B \fCstyle\fP
.sp
Name of style to use for command output.
.TP
.B \fCtimeout\fP
.sp
The timeout used when a lock is held (in seconds), a negative value
means no timeout. Default is 600.
.TP
.B \fCtraceback\fP
.sp
Mercurial always prints a traceback when an unknown exception
occurs. Setting this to True will make Mercurial print a traceback
on all exceptions, even those recognized by Mercurial (such as
IOError or MemoryError). Default is False.
.TP
.B \fCusername\fP
.sp
The committer of a changeset created when running "commit".
Typically a person\(aqs name and email address, e.g. \fCFred Widget
<fred@example.com>\fP. Default is \fC$EMAIL\fP or \fCusername@hostname\fP. If
the username in hgrc is empty, it has to be specified manually or
in a different hgrc file (e.g. \fC$HOME/.hgrc\fP, if the admin set
\fCusername =\fP  in the system hgrc). Environment variables in the
username are expanded.
.TP
.B \fCverbose\fP
.sp
Increase the amount of output printed. True or False. Default is False.
.UNINDENT
.SS \fCweb\fP
.sp
Web interface configuration.
.INDENT 0.0
.TP
.B \fCaccesslog\fP
.sp
Where to output the access log. Default is stdout.
.TP
.B \fCaddress\fP
.sp
Interface address to bind to. Default is all.
.TP
.B \fCallow_archive\fP
.sp
List of archive format (bz2, gz, zip) allowed for downloading.
Default is empty.
.TP
.B \fCallowbz2\fP
.sp
(DEPRECATED) Whether to allow .tar.bz2 downloading of repository
revisions.
Default is False.
.TP
.B \fCallowgz\fP
.sp
(DEPRECATED) Whether to allow .tar.gz downloading of repository
revisions.
Default is False.
.TP
.B \fCallowpull\fP
.sp
Whether to allow pulling from the repository. Default is True.
.TP
.B \fCallow_push\fP
.sp
Whether to allow pushing to the repository. If empty or not set,
push is not allowed. If the special value \fC*\fP, any remote user can
push, including unauthenticated users. Otherwise, the remote user
must have been authenticated, and the authenticated user name must
be present in this list. The contents of the allow_push list are
examined after the deny_push list.
.TP
.B \fCallow_read\fP
.sp
If the user has not already been denied repository access due to
the contents of deny_read, this list determines whether to grant
repository access to the user. If this list is not empty, and the
user is unauthenticated or not present in the list, then access is
denied for the user. If the list is empty or not set, then access
is permitted to all users by default. Setting allow_read to the
special value \fC*\fP is equivalent to it not being set (i.e. access
is permitted to all users). The contents of the allow_read list are
examined after the deny_read list.
.TP
.B \fCallowzip\fP
.sp
(DEPRECATED) Whether to allow .zip downloading of repository
revisions. Default is False. This feature creates temporary files.
.TP
.B \fCbaseurl\fP
.sp
Base URL to use when publishing URLs in other locations, so
third\-party tools like email notification hooks can construct
URLs. Example: \fChttp://hgserver/repos/\fP.
.TP
.B \fCcacerts\fP
.sp
Path to file containing a list of PEM encoded certificate authorities
that may be used to verify an SSL server\(aqs identity. The form must be
as follows:
.sp
.nf
.ft C
\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-
\&... (certificate in base64 PEM encoding) ...
\-\-\-\-\-END CERTIFICATE\-\-\-\-\-
\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-
\&... (certificate in base64 PEM encoding) ...
\-\-\-\-\-END CERTIFICATE\-\-\-\-\-
.ft P
.fi
.sp
This feature is only supported when using Python 2.6. If you wish to
use it with earlier versions of Python, install the backported
version of the ssl library that is available from
\fChttp://pypi.python.org\fP.
.sp
You can use OpenSSL\(aqs CA certificate file if your platform has one.
On most Linux systems this will be \fC/etc/ssl/certs/ca\-certificates.crt\fP.
Otherwise you will have to generate this file manually.
.TP
.B \fCcontact\fP
.sp
Name or email address of the person in charge of the repository.
Defaults to ui.username or \fC$EMAIL\fP or "unknown" if unset or empty.
.TP
.B \fCdeny_push\fP
.sp
Whether to deny pushing to the repository. If empty or not set,
push is not denied. If the special value \fC*\fP, all remote users are
denied push. Otherwise, unauthenticated users are all denied, and
any authenticated user name present in this list is also denied. The
contents of the deny_push list are examined before the allow_push list.
.TP
.B \fCdeny_read\fP
.sp
Whether to deny reading/viewing of the repository. If this list is
not empty, unauthenticated users are all denied, and any
authenticated user name present in this list is also denied access to
the repository. If set to the special value \fC*\fP, all remote users
are denied access (rarely needed ;). If deny_read is empty or not set,
the determination of repository access depends on the presence and
content of the allow_read list (see description). If both
deny_read and allow_read are empty or not set, then access is
permitted to all users by default. If the repository is being
served via hgwebdir, denied users will not be able to see it in
the list of repositories. The contents of the deny_read list have
priority over (are examined before) the contents of the allow_read
list.
.TP
.B \fCdescend\fP
.sp
hgwebdir indexes will not descend into subdirectories. Only repositories
directly in the current path will be shown (other repositories are still
available from the index corresponding to their containing path).
.TP
.B \fCdescription\fP
.sp
Textual description of the repository\(aqs purpose or contents.
Default is "unknown".
.TP
.B \fCencoding\fP
.sp
Character encoding name. Default is the current locale charset.
Example: "UTF\-8"
.TP
.B \fCerrorlog\fP
.sp
Where to output the error log. Default is stderr.
.TP
.B \fChidden\fP
.sp
Whether to hide the repository in the hgwebdir index.
Default is False.
.TP
.B \fCipv6\fP
.sp
Whether to use IPv6. Default is False.
.TP
.B \fCname\fP
.sp
Repository name to use in the web interface. Default is current
working directory.
.TP
.B \fCmaxchanges\fP
.sp
Maximum number of changes to list on the changelog. Default is 10.
.TP
.B \fCmaxfiles\fP
.sp
Maximum number of files to list per changeset. Default is 10.
.TP
.B \fCport\fP
.sp
Port to listen on. Default is 8000.
.TP
.B \fCprefix\fP
.sp
Prefix path to serve from. Default is \(aq\(aq (server root).
.TP
.B \fCpush_ssl\fP
.sp
Whether to require that inbound pushes be transported over SSL to
prevent password sniffing. Default is True.
.TP
.B \fCstaticurl\fP
.sp
Base URL to use for static files. If unset, static files (e.g. the
hgicon.png favicon) will be served by the CGI script itself. Use
this setting to serve them directly with the HTTP server.
Example: \fChttp://hgserver/static/\fP.
.TP
.B \fCstripes\fP
.sp
How many lines a "zebra stripe" should span in multiline output.
Default is 1; set to 0 to disable.
.TP
.B \fCstyle\fP
.sp
Which template map style to use.
.TP
.B \fCtemplates\fP
.sp
Where to find the HTML templates. Default is install path.
.UNINDENT
.SH Author
.sp
Bryan O\(aqSullivan <\fI\%bos@serpentine.com\fP>.
.sp
Mercurial was written by Matt Mackall <\fI\%mpm@selenic.com\fP>.
.SH See Also
.sp
\fI\%\fBhg\fP(1)\fP, \fI\%\fBhgignore\fP(5)\fP
.SH Copying
.sp
This manual page is copyright 2005 Bryan O\(aqSullivan.
Mercurial is copyright 2005\-2010 Matt Mackall.
Free use of this software is granted under the terms of the GNU General
Public License version 2 or any later version.
.\" Common link and substitution definitions.
.
.SH AUTHOR
Bryan O'Sullivan <bos@serpentine.com>

Organization: Mercurial
.\" Generated by docutils manpage writer.
.\" 
.
