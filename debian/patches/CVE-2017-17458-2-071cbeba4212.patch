
# HG changeset patch
# User Yuya Nishihara <yuya@tcha.org>
# Date 1509707570 -32400
# Node ID 071cbeba421217d722a69a5d614ec934684d62d5
# Parent  80d7dbda92940c49e0fd66230ae07cd526b3629c
subrepo: disallow symlink traversal across subrepo mount point (SEC)

It wasn't easy to extend the pathauditor to check symlink traversal across
subrepos because pathauditor._checkfs() rejects a directory having ".hg"
directory. That's why I added the explicit islink() check.

No idea if this patch is necessary after we've fixed the issue5730 by
splitting submerge() into planning and execution phases.

--- mercurial.orig/mercurial/subrepo.py
+++ mercurial/mercurial/subrepo.py
@@ -256,6 +256,12 @@
     for subpath, ctx in sorted(subpaths.iteritems()):
         yield subpath, ctx.sub(subpath)
 
+def _auditsubrepopath(repo, path):
+    # auditor doesn't check if the path itself is a symlink
+    scmutil.pathauditor(repo.root)(path)
+    if os.path.islink(path):
+        raise util.Abort(_("subrepo '%s' traverses symbolic link") % path)
+
 def subrepo(ctx, path):
     """return instance of the right subrepo class for subrepo in path"""
     # subrepo inherently violates our import layering rules
@@ -266,7 +272,7 @@
     import hg as h
     hg = h
 
-    scmutil.pathauditor(ctx._repo.root)(path)
+    _auditsubrepopath(ctx._repo, path)
     state = ctx.substate.get(path, nullstate)
     if state[2] not in types:
         raise util.Abort(_('unknown subrepo type %s') % state[2])
--- mercurial.orig/tests/test-audit-subrepo.t
+++ mercurial/tests/test-audit-subrepo.t
@@ -50,17 +50,35 @@
   $ hg ci -qAm 'add symlink "out"'
   $ hg init ../out
   $ echo 'out = out' >> .hgsub
-BROKEN: should fail
   $ hg ci -qAm 'add subrepo "out"'
+  abort: subrepo 'out' traverses symbolic link
+  [255]
+
+prepare tampered repo (including the commit above):
+
+  $ hg import --bypass -qm 'add subrepo "out"' - <<'EOF'
+  > diff --git a/.hgsub b/.hgsub
+  > new file mode 100644
+  > --- /dev/null
+  > +++ b/.hgsub
+  > @@ -0,0 +1,1 @@
+  > +out = out
+  > diff --git a/.hgsubstate b/.hgsubstate
+  > new file mode 100644
+  > --- /dev/null
+  > +++ b/.hgsubstate
+  > @@ -0,0 +1,1 @@
+  > +0000000000000000000000000000000000000000 out
+  > EOF
   $ cd ../..
 
 on clone (and update):
 
   $ mkdir hgsymdir2
-BROKEN: should fail to update
   $ hg clone -q hgsymdir/root hgsymdir2/root
+  abort: could not symlink to '../out': File exists: $TESTTMP/hgsymdir2/root/out
+  [255]
   $ ls hgsymdir2
-  out
   root
 
 #endif
@@ -106,7 +124,7 @@
 
   $ mkdir hgsymin2
   $ hg clone -q hgsymin/root hgsymin2/root
-  abort: path 'out/sub' traverses symbolic link 'out'
+  abort: could not symlink to '../out': File exists: $TESTTMP/hgsymin2/root/out
   [255]
   $ ls hgsymin2
   root
